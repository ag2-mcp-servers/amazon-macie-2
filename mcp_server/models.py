# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T12:34:05+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, conint, constr


class AcceptInvitationResponse(BaseModel):
    pass


class AccessDeniedException(RootModel[Any]):
    root: Any


class AdminStatus(Enum):
    ENABLED = 'ENABLED'
    DISABLING_IN_PROGRESS = 'DISABLING_IN_PROGRESS'


class AllowListStatusCode(Enum):
    OK = 'OK'
    S3_OBJECT_NOT_FOUND = 'S3_OBJECT_NOT_FOUND'
    S3_USER_ACCESS_DENIED = 'S3_USER_ACCESS_DENIED'
    S3_OBJECT_ACCESS_DENIED = 'S3_OBJECT_ACCESS_DENIED'
    S3_THROTTLED = 'S3_THROTTLED'
    S3_OBJECT_OVERSIZE = 'S3_OBJECT_OVERSIZE'
    S3_OBJECT_EMPTY = 'S3_OBJECT_EMPTY'
    UNKNOWN_ERROR = 'UNKNOWN_ERROR'


class AllowsUnencryptedObjectUploads(Enum):
    TRUE = 'TRUE'
    FALSE = 'FALSE'
    UNKNOWN = 'UNKNOWN'


class AutomatedDiscoveryStatus(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class AvailabilityCode(Enum):
    AVAILABLE = 'AVAILABLE'
    UNAVAILABLE = 'UNAVAILABLE'


class BucketMetadataErrorCode(Enum):
    ACCESS_DENIED = 'ACCESS_DENIED'


class ClassificationScopeId(RootModel[constr(pattern=r'^[0-9a-z]*$')]):
    root: constr(pattern=r'^[0-9a-z]*$') = Field(
        ..., description='The unique identifier the classification scope.'
    )


class ClassificationScopeName(RootModel[constr(pattern=r'^[0-9a-zA-Z_\\-]*$')]):
    root: constr(pattern=r'^[0-9a-zA-Z_\\-]*$') = Field(
        ..., description='The name of the classification scope.'
    )


class ClassificationScopeSummary(BaseModel):
    id: Optional[ClassificationScopeId] = None
    name: Optional[ClassificationScopeName] = None


class ClassificationScopeUpdateOperation(Enum):
    ADD = 'ADD'
    REPLACE = 'REPLACE'
    REMOVE = 'REMOVE'


class ConflictException(RootModel[Any]):
    root: Any


class CreateSampleFindingsResponse(BaseModel):
    pass


class Currency(Enum):
    USD = 'USD'


class DailySchedule(BaseModel):
    pass


class DataIdentifierSeverity(Enum):
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'


class DataIdentifierType(Enum):
    CUSTOM = 'CUSTOM'
    MANAGED = 'MANAGED'


class DayOfWeek(Enum):
    SUNDAY = 'SUNDAY'
    MONDAY = 'MONDAY'
    TUESDAY = 'TUESDAY'
    WEDNESDAY = 'WEDNESDAY'
    THURSDAY = 'THURSDAY'
    FRIDAY = 'FRIDAY'
    SATURDAY = 'SATURDAY'


class DeleteAllowListRequest(BaseModel):
    pass


class DeleteAllowListResponse(BaseModel):
    pass


class DeleteCustomDataIdentifierRequest(BaseModel):
    pass


class DeleteCustomDataIdentifierResponse(BaseModel):
    pass


class DeleteFindingsFilterRequest(BaseModel):
    pass


class DeleteFindingsFilterResponse(BaseModel):
    pass


class DeleteMemberRequest(BaseModel):
    pass


class DeleteMemberResponse(BaseModel):
    pass


class DescribeClassificationJobRequest(BaseModel):
    pass


class DescribeOrganizationConfigurationRequest(BaseModel):
    pass


class DisableMacieRequest(BaseModel):
    pass


class DisableMacieResponse(BaseModel):
    pass


class DisableOrganizationAdminAccountRequest(BaseModel):
    pass


class DisableOrganizationAdminAccountResponse(BaseModel):
    pass


class DisassociateFromAdministratorAccountRequest(BaseModel):
    pass


class DisassociateFromAdministratorAccountResponse(BaseModel):
    pass


class DisassociateFromMasterAccountRequest(BaseModel):
    pass


class DisassociateFromMasterAccountResponse(BaseModel):
    pass


class DisassociateMemberRequest(BaseModel):
    pass


class DisassociateMemberResponse(BaseModel):
    pass


class EffectivePermission(Enum):
    PUBLIC = 'PUBLIC'
    NOT_PUBLIC = 'NOT_PUBLIC'
    UNKNOWN = 'UNKNOWN'


class EnableMacieResponse(BaseModel):
    pass


class EnableOrganizationAdminAccountResponse(BaseModel):
    pass


class EncryptionType(Enum):
    NONE = 'NONE'
    AES256 = 'AES256'
    aws_kms = 'aws:kms'
    UNKNOWN = 'UNKNOWN'


class ErrorCode(Enum):
    ClientError = 'ClientError'
    InternalError = 'InternalError'


class FindingActionType(Enum):
    AWS_API_CALL = 'AWS_API_CALL'


class FindingCategory(Enum):
    CLASSIFICATION = 'CLASSIFICATION'
    POLICY = 'POLICY'


class FindingPublishingFrequency(Enum):
    FIFTEEN_MINUTES = 'FIFTEEN_MINUTES'
    ONE_HOUR = 'ONE_HOUR'
    SIX_HOURS = 'SIX_HOURS'


class FindingStatisticsSortAttributeName(Enum):
    groupKey = 'groupKey'
    count = 'count'


class FindingType(Enum):
    SensitiveData_S3Object_Multiple = 'SensitiveData:S3Object/Multiple'
    SensitiveData_S3Object_Financial = 'SensitiveData:S3Object/Financial'
    SensitiveData_S3Object_Personal = 'SensitiveData:S3Object/Personal'
    SensitiveData_S3Object_Credentials = 'SensitiveData:S3Object/Credentials'
    SensitiveData_S3Object_CustomIdentifier = 'SensitiveData:S3Object/CustomIdentifier'
    Policy_IAMUser_S3BucketPublic = 'Policy:IAMUser/S3BucketPublic'
    Policy_IAMUser_S3BucketSharedExternally = 'Policy:IAMUser/S3BucketSharedExternally'
    Policy_IAMUser_S3BucketReplicatedExternally = (
        'Policy:IAMUser/S3BucketReplicatedExternally'
    )
    Policy_IAMUser_S3BucketEncryptionDisabled = (
        'Policy:IAMUser/S3BucketEncryptionDisabled'
    )
    Policy_IAMUser_S3BlockPublicAccessDisabled = (
        'Policy:IAMUser/S3BlockPublicAccessDisabled'
    )
    Policy_IAMUser_S3BucketSharedWithCloudFront = (
        'Policy:IAMUser/S3BucketSharedWithCloudFront'
    )


class FindingsFilterAction(Enum):
    ARCHIVE = 'ARCHIVE'
    NOOP = 'NOOP'


class GetAdministratorAccountRequest(BaseModel):
    pass


class GetAllowListRequest(BaseModel):
    pass


class GetAutomatedDiscoveryConfigurationRequest(BaseModel):
    pass


class GetClassificationExportConfigurationRequest(BaseModel):
    pass


class GetClassificationScopeRequest(BaseModel):
    pass


class GetCustomDataIdentifierRequest(BaseModel):
    pass


class GetFindingsFilterRequest(BaseModel):
    pass


class GetFindingsPublicationConfigurationRequest(BaseModel):
    pass


class GetInvitationsCountRequest(BaseModel):
    pass


class GetMacieSessionRequest(BaseModel):
    pass


class GetMasterAccountRequest(BaseModel):
    pass


class GetMemberRequest(BaseModel):
    pass


class GetResourceProfileRequest(BaseModel):
    pass


class GetRevealConfigurationRequest(BaseModel):
    pass


class GetSensitiveDataOccurrencesAvailabilityRequest(BaseModel):
    pass


class GetSensitiveDataOccurrencesRequest(BaseModel):
    pass


class GetSensitivityInspectionTemplateRequest(BaseModel):
    pass


class GetUsageTotalsRequest(BaseModel):
    pass


class GroupBy(Enum):
    resourcesAffected_s3Bucket_name = 'resourcesAffected.s3Bucket.name'
    type = 'type'
    classificationDetails_jobId = 'classificationDetails.jobId'
    severity_description = 'severity.description'


class InternalServerException(RootModel[Any]):
    root: Any


class IsDefinedInJob(Enum):
    TRUE = 'TRUE'
    FALSE = 'FALSE'
    UNKNOWN = 'UNKNOWN'


class IsMonitoredByJob(Enum):
    TRUE = 'TRUE'
    FALSE = 'FALSE'
    UNKNOWN = 'UNKNOWN'


class JobComparator(Enum):
    EQ = 'EQ'
    GT = 'GT'
    GTE = 'GTE'
    LT = 'LT'
    LTE = 'LTE'
    NE = 'NE'
    CONTAINS = 'CONTAINS'
    STARTS_WITH = 'STARTS_WITH'


class JobStatus(Enum):
    RUNNING = 'RUNNING'
    PAUSED = 'PAUSED'
    CANCELLED = 'CANCELLED'
    COMPLETE = 'COMPLETE'
    IDLE = 'IDLE'
    USER_PAUSED = 'USER_PAUSED'


class JobType(Enum):
    ONE_TIME = 'ONE_TIME'
    SCHEDULED = 'SCHEDULED'


class LastRunErrorStatusCode(Enum):
    NONE = 'NONE'
    ERROR = 'ERROR'


class ListAllowListsRequest(BaseModel):
    pass


class ListClassificationScopesRequest(BaseModel):
    pass


class ListFindingsFiltersRequest(BaseModel):
    pass


class ListInvitationsRequest(BaseModel):
    pass


class ListJobsFilterKey(Enum):
    jobType = 'jobType'
    jobStatus = 'jobStatus'
    createdAt = 'createdAt'
    name = 'name'


class ListJobsSortAttributeName(Enum):
    createdAt = 'createdAt'
    jobStatus = 'jobStatus'
    name = 'name'
    jobType = 'jobType'


class ListMembersRequest(BaseModel):
    pass


class ListOrganizationAdminAccountsRequest(BaseModel):
    pass


class ListResourceProfileArtifactsRequest(BaseModel):
    pass


class ListResourceProfileDetectionsRequest(BaseModel):
    pass


class ListSensitivityInspectionTemplatesRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class MacieStatus(Enum):
    PAUSED = 'PAUSED'
    ENABLED = 'ENABLED'


class ManagedDataIdentifierSelector(Enum):
    ALL = 'ALL'
    EXCLUDE = 'EXCLUDE'
    INCLUDE = 'INCLUDE'
    NONE = 'NONE'


class MaxResults(RootModel[conint(ge=1, le=25)]):
    root: conint(ge=1, le=25)


class NextToken(RootModel[constr(pattern=r'^.*$')]):
    root: constr(pattern=r'^.*$') = Field(
        ...,
        description='Specifies which page of results to return in a paginated response.',
    )


class OrderBy(Enum):
    ASC = 'ASC'
    DESC = 'DESC'


class OriginType(Enum):
    SENSITIVE_DATA_DISCOVERY_JOB = 'SENSITIVE_DATA_DISCOVERY_JOB'
    AUTOMATED_SENSITIVE_DATA_DISCOVERY = 'AUTOMATED_SENSITIVE_DATA_DISCOVERY'


class PutFindingsPublicationConfigurationResponse(BaseModel):
    pass


class RelationshipStatus(Enum):
    Enabled = 'Enabled'
    Paused = 'Paused'
    Invited = 'Invited'
    Created = 'Created'
    Removed = 'Removed'
    Resigned = 'Resigned'
    EmailVerificationInProgress = 'EmailVerificationInProgress'
    EmailVerificationFailed = 'EmailVerificationFailed'
    RegionDisabled = 'RegionDisabled'
    AccountSuspended = 'AccountSuspended'


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class RevealRequestStatus(Enum):
    SUCCESS = 'SUCCESS'
    PROCESSING = 'PROCESSING'
    ERROR = 'ERROR'


class RevealStatus(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class S3BucketName(RootModel[constr(pattern=r'^[A-Za-z0-9.\-_]{3,255}$')]):
    root: constr(pattern=r'^[A-Za-z0-9.\-_]{3,255}$') = Field(
        ..., description='The name of an S3 bucket.'
    )


class ScopeFilterKey(Enum):
    OBJECT_EXTENSION = 'OBJECT_EXTENSION'
    OBJECT_LAST_MODIFIED_DATE = 'OBJECT_LAST_MODIFIED_DATE'
    OBJECT_SIZE = 'OBJECT_SIZE'
    OBJECT_KEY = 'OBJECT_KEY'


class SearchResourcesComparator(Enum):
    EQ = 'EQ'
    NE = 'NE'


class SearchResourcesSimpleCriterionKey(Enum):
    ACCOUNT_ID = 'ACCOUNT_ID'
    S3_BUCKET_NAME = 'S3_BUCKET_NAME'
    S3_BUCKET_EFFECTIVE_PERMISSION = 'S3_BUCKET_EFFECTIVE_PERMISSION'
    S3_BUCKET_SHARED_ACCESS = 'S3_BUCKET_SHARED_ACCESS'


class SearchResourcesSortAttributeName(Enum):
    ACCOUNT_ID = 'ACCOUNT_ID'
    RESOURCE_NAME = 'RESOURCE_NAME'
    S3_CLASSIFIABLE_OBJECT_COUNT = 'S3_CLASSIFIABLE_OBJECT_COUNT'
    S3_CLASSIFIABLE_SIZE_IN_BYTES = 'S3_CLASSIFIABLE_SIZE_IN_BYTES'


class SearchResourcesSortCriteria(BaseModel):
    attributeName: Optional[SearchResourcesSortAttributeName] = None
    orderBy: Optional[OrderBy] = None


class SensitiveDataItemCategory(Enum):
    FINANCIAL_INFORMATION = 'FINANCIAL_INFORMATION'
    PERSONAL_INFORMATION = 'PERSONAL_INFORMATION'
    CREDENTIALS = 'CREDENTIALS'
    CUSTOM_IDENTIFIER = 'CUSTOM_IDENTIFIER'


class SensitivityInspectionTemplateId(RootModel[str]):
    root: str = Field(
        ...,
        description='The unique identifier for the sensitivity inspection template.',
    )


class ServiceQuotaExceededException(RootModel[Any]):
    root: Any


class SeverityDescription(Enum):
    Low = 'Low'
    Medium = 'Medium'
    High = 'High'


class SharedAccess(Enum):
    EXTERNAL = 'EXTERNAL'
    INTERNAL = 'INTERNAL'
    NOT_SHARED = 'NOT_SHARED'
    UNKNOWN = 'UNKNOWN'


class SimpleCriterionKeyForJob(Enum):
    ACCOUNT_ID = 'ACCOUNT_ID'
    S3_BUCKET_NAME = 'S3_BUCKET_NAME'
    S3_BUCKET_EFFECTIVE_PERMISSION = 'S3_BUCKET_EFFECTIVE_PERMISSION'
    S3_BUCKET_SHARED_ACCESS = 'S3_BUCKET_SHARED_ACCESS'


class StorageClass(Enum):
    STANDARD = 'STANDARD'
    REDUCED_REDUNDANCY = 'REDUCED_REDUNDANCY'
    STANDARD_IA = 'STANDARD_IA'
    INTELLIGENT_TIERING = 'INTELLIGENT_TIERING'
    DEEP_ARCHIVE = 'DEEP_ARCHIVE'
    ONEZONE_IA = 'ONEZONE_IA'
    GLACIER = 'GLACIER'
    GLACIER_IR = 'GLACIER_IR'
    OUTPOSTS = 'OUTPOSTS'


class TagResourceResponse(BaseModel):
    pass


class TagTarget(Enum):
    S3_OBJECT = 'S3_OBJECT'


class ThrottlingException(RootModel[Any]):
    root: Any


class TimeRange(Enum):
    MONTH_TO_DATE = 'MONTH_TO_DATE'
    PAST_30_DAYS = 'PAST_30_DAYS'


class Timestamp(RootModel[datetime]):
    root: datetime = Field(
        ...,
        description='Specifies a date and time in UTC and extended ISO 8601 format.',
    )


class Type(Enum):
    NONE = 'NONE'
    AES256 = 'AES256'
    aws_kms = 'aws:kms'


class UnavailabilityReasonCode(Enum):
    OBJECT_EXCEEDS_SIZE_QUOTA = 'OBJECT_EXCEEDS_SIZE_QUOTA'
    UNSUPPORTED_OBJECT_TYPE = 'UNSUPPORTED_OBJECT_TYPE'
    UNSUPPORTED_FINDING_TYPE = 'UNSUPPORTED_FINDING_TYPE'
    INVALID_CLASSIFICATION_RESULT = 'INVALID_CLASSIFICATION_RESULT'
    OBJECT_UNAVAILABLE = 'OBJECT_UNAVAILABLE'


class Unit(Enum):
    TERABYTES = 'TERABYTES'


class UnprocessableEntityException(RootModel[Any]):
    root: Any


class UntagResourceRequest(BaseModel):
    pass


class UntagResourceResponse(BaseModel):
    pass


class UpdateAutomatedDiscoveryConfigurationRequest(BaseModel):
    status: AutomatedDiscoveryStatus


class UpdateAutomatedDiscoveryConfigurationResponse(BaseModel):
    pass


class UpdateClassificationJobRequest(BaseModel):
    jobStatus: JobStatus


class UpdateClassificationJobResponse(BaseModel):
    pass


class UpdateClassificationScopeResponse(BaseModel):
    pass


class UpdateMacieSessionRequest(BaseModel):
    findingPublishingFrequency: Optional[FindingPublishingFrequency] = None
    status: Optional[MacieStatus] = None


class UpdateMacieSessionResponse(BaseModel):
    pass


class UpdateMemberSessionRequest(BaseModel):
    status: MacieStatus


class UpdateMemberSessionResponse(BaseModel):
    pass


class UpdateOrganizationConfigurationResponse(BaseModel):
    pass


class UpdateResourceProfileDetectionsResponse(BaseModel):
    pass


class UpdateResourceProfileResponse(BaseModel):
    pass


class UpdateSensitivityInspectionTemplateResponse(BaseModel):
    pass


class UsageStatisticsFilterComparator(Enum):
    GT = 'GT'
    GTE = 'GTE'
    LT = 'LT'
    LTE = 'LTE'
    EQ = 'EQ'
    NE = 'NE'
    CONTAINS = 'CONTAINS'


class UsageStatisticsFilterKey(Enum):
    accountId = 'accountId'
    serviceLimit = 'serviceLimit'
    freeTrialStartDate = 'freeTrialStartDate'
    total = 'total'


class UsageStatisticsSortKey(Enum):
    accountId = 'accountId'
    total = 'total'
    serviceLimitValue = 'serviceLimitValue'
    freeTrialStartDate = 'freeTrialStartDate'


class UsageType(Enum):
    DATA_INVENTORY_EVALUATION = 'DATA_INVENTORY_EVALUATION'
    SENSITIVE_DATA_DISCOVERY = 'SENSITIVE_DATA_DISCOVERY'
    AUTOMATED_SENSITIVE_DATA_DISCOVERY = 'AUTOMATED_SENSITIVE_DATA_DISCOVERY'
    AUTOMATED_OBJECT_MONITORING = 'AUTOMATED_OBJECT_MONITORING'


class UserIdentityType(Enum):
    AssumedRole = 'AssumedRole'
    IAMUser = 'IAMUser'
    FederatedUser = 'FederatedUser'
    Root = 'Root'
    AWSAccount = 'AWSAccount'
    AWSService = 'AWSService'


class ValidationException(RootModel[Any]):
    root: Any


class WeeklySchedule(BaseModel):
    dayOfWeek: Optional[DayOfWeek] = None


class FieldBoolean(RootModel[bool]):
    root: bool


class FieldDouble(RootModel[float]):
    root: float


class FieldInteger(RootModel[int]):
    root: int


class FieldListOfClassificationScopeSummary(
    RootModel[List[ClassificationScopeSummary]]
):
    root: List[ClassificationScopeSummary]


class FieldListOfFindingType(RootModel[List[FindingType]]):
    root: List[FindingType]


class FieldListOfS3BucketName(RootModel[List[S3BucketName]]):
    root: List[S3BucketName]


class FieldListOfUnavailabilityReasonCode(RootModel[List[UnavailabilityReasonCode]]):
    root: List[UnavailabilityReasonCode] = Field(..., min_length=0)


class FieldLong(RootModel[int]):
    root: int


class FieldString(RootModel[str]):
    root: str


class FieldStringMin1Max1024PatternSS(
    RootModel[constr(pattern=r'^[\s\S]+$', min_length=1, max_length=1024)]
):
    root: constr(pattern=r'^[\s\S]+$', min_length=1, max_length=1024)


class FieldStringMin1Max128(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class FieldStringMin1Max128Pattern(
    RootModel[constr(pattern=r'^.+$', min_length=1, max_length=128)]
):
    root: constr(pattern=r'^.+$', min_length=1, max_length=128)


class FieldStringMin1Max2048(RootModel[constr(min_length=1, max_length=2048)]):
    root: constr(min_length=1, max_length=2048)


class FieldStringMin1Max512PatternSS(
    RootModel[constr(pattern=r'^[\s\S]+$', min_length=1, max_length=512)]
):
    root: constr(pattern=r'^[\s\S]+$', min_length=1, max_length=512)


class FieldStringMin22Max22PatternAZ0922(
    RootModel[constr(pattern=r'^[a-z0-9]{22}$', min_length=22, max_length=22)]
):
    root: constr(pattern=r'^[a-z0-9]{22}$', min_length=22, max_length=22)


class FieldStringMin3Max255PatternAZaZ093255(
    RootModel[constr(pattern=r'^[A-Za-z0-9.\-_]{3,255}$', min_length=3, max_length=255)]
):
    root: constr(pattern=r'^[A-Za-z0-9.\-_]{3,255}$', min_length=3, max_length=255)


class FieldStringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922(
    RootModel[
        constr(
            pattern=r'^arn:(aws|aws-cn|aws-us-gov):macie2:[a-z1-9-]{9,20}:\d{12}:allow-list\/[a-z0-9]{22}$',
            min_length=71,
            max_length=89,
        )
    ]
):
    root: constr(
        pattern=r'^arn:(aws|aws-cn|aws-us-gov):macie2:[a-z1-9-]{9,20}:\d{12}:allow-list\/[a-z0-9]{22}$',
        min_length=71,
        max_length=89,
    )


class FieldTimestampIso8601(RootModel[datetime]):
    root: datetime


class AdminPostRequest(BaseModel):
    adminAccountId: str = Field(
        ...,
        description='The Amazon Web Services account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.',
    )
    clientToken: Optional[str] = Field(
        None,
        description='A unique, case-sensitive token that you provide to ensure the idempotency of the request.',
    )


class AdminConfigurationPatchRequest(BaseModel):
    autoEnable: bool = Field(
        ...,
        description='Specifies whether to enable Amazon Macie automatically for an account when the account is added to the organization in Organizations.',
    )


class Status(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class AutomatedDiscoveryConfigurationPutRequest(BaseModel):
    status: Status = Field(
        ...,
        description='The status of the automated sensitive data discovery configuration for an Amazon Macie account. Valid values are:',
    )


class CustomDataIdentifiersGetPostRequest(BaseModel):
    ids: Optional[List[FieldString]] = Field(
        None,
        description='An array of custom data identifier IDs, one for each custom data identifier to retrieve information about.',
    )


class CustomDataIdentifiersListPostRequest(BaseModel):
    maxResults: Optional[int] = Field(
        None,
        description='The maximum number of items to include in each page of the response.',
    )
    nextToken: Optional[str] = Field(
        None,
        description='The nextToken string that specifies which page of results to return in a paginated response.',
    )


class CustomDataIdentifiersTestPostRequest(BaseModel):
    ignoreWords: Optional[List[FieldString]] = Field(
        None,
        description='An array that lists specific character sequences (<i>ignore words</i>) to exclude from the results. If the text matched by the regular expression contains any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4-90 UTF-8 characters. Ignore words are case sensitive.',
    )
    keywords: Optional[List[FieldString]] = Field(
        None,
        description="An array that lists specific character sequences (<i>keywords</i>), one of which must precede and be within proximity (maximumMatchDistance) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 3-90 UTF-8 characters. Keywords aren't case sensitive.",
    )
    maximumMatchDistance: Optional[int] = Field(
        None,
        description='The maximum number of characters that can exist between the end of at least one complete character sequence specified by the keywords array and the end of the text that matches the regex pattern. If a complete keyword precedes all the text that matches the pattern and the keyword is within the specified distance, Amazon Macie includes the result. The distance can be 1-300 characters. The default value is 50.',
    )
    regex: str = Field(
        ...,
        description='The regular expression (<i>regex</i>) that defines the pattern to match. The expression can contain as many as 512 characters.',
    )
    sampleText: str = Field(
        ...,
        description='The sample text to inspect by using the custom data identifier. The text can contain as many as 1,000 characters.',
    )


class SortCriteria1(BaseModel):
    attributeName: Optional[FieldString] = None
    orderBy: Optional[OrderBy] = None


class DatasourcesS3StatisticsPostRequest(BaseModel):
    accountId: Optional[str] = Field(
        None, description='The unique identifier for the Amazon Web Services account.'
    )


class SortCriteria2(BaseModel):
    attributeName: Optional[SearchResourcesSortAttributeName] = None
    orderBy: Optional[OrderBy] = None


class SortCriteria3(BaseModel):
    attributeName: Optional[FieldString] = None
    orderBy: Optional[OrderBy] = None


class SecurityHubConfiguration1(BaseModel):
    publishClassificationFindings: Optional[FieldBoolean] = None
    publishPolicyFindings: Optional[FieldBoolean] = None


class FindingsPublicationConfigurationPutRequest(BaseModel):
    clientToken: Optional[str] = Field(
        None,
        description='A unique, case-sensitive token that you provide to ensure the idempotency of the request.',
    )
    securityHubConfiguration: Optional[SecurityHubConfiguration1] = Field(
        None,
        description='Specifies configuration settings that determine which findings are published to Security Hub automatically. For information about how Macie publishes findings to Security Hub, see <a href="https://docs.aws.amazon.com/macie/latest/user/securityhub-integration.html">Amazon Macie integration with Security Hub</a> in the <i>Amazon Macie User Guide</i>.',
    )


class FindingsDescribePostRequest(BaseModel):
    findingIds: List[FieldString] = Field(
        ...,
        description='An array of strings that lists the unique identifiers for the findings to retrieve. You can specify as many as 50 unique identifiers in this array.',
    )
    sortCriteria: Optional[SortCriteria3] = Field(
        None,
        description='Specifies criteria for sorting the results of a request for findings.',
    )


class FindingsSamplePostRequest(BaseModel):
    findingTypes: Optional[List[FindingType]] = Field(
        None,
        description="An array of finding types, one for each type of sample finding to create. To create a sample of every type of finding that Amazon Macie supports, don't include this array in your request.",
    )


class SortCriteria5(BaseModel):
    attributeName: Optional[FindingStatisticsSortAttributeName] = None
    orderBy: Optional[OrderBy] = None


class Action(Enum):
    ARCHIVE = 'ARCHIVE'
    NOOP = 'NOOP'


class InvitationsPostRequest(BaseModel):
    accountIds: List[FieldString] = Field(
        ...,
        description='An array that lists Amazon Web Services account IDs, one for each account to send the invitation to.',
    )
    disableEmailNotification: Optional[bool] = Field(
        None,
        description="Specifies whether to send the invitation as an email message. If this value is false, Amazon Macie sends the invitation (as an email message) to the email address that you specified for the recipient's account when you associated the account with your account. The default value is false.",
    )
    message: Optional[str] = Field(
        None,
        description='Custom text to include in the email message that contains the invitation. The text can contain as many as 80 alphanumeric characters.',
    )


class InvitationsAcceptPostRequest(BaseModel):
    administratorAccountId: Optional[str] = Field(
        None,
        description='The Amazon Web Services account ID for the account that sent the invitation.',
    )
    invitationId: str = Field(
        ..., description='The unique identifier for the invitation to accept.'
    )
    masterAccount: Optional[str] = Field(
        None,
        description='(Deprecated) The Amazon Web Services account ID for the account that sent the invitation. This property has been replaced by the administratorAccountId property and is retained only for backward compatibility.',
    )


class InvitationsDeclinePostRequest(BaseModel):
    accountIds: List[FieldString] = Field(
        ...,
        description='An array that lists Amazon Web Services account IDs, one for each account that sent an invitation to decline.',
    )


class InvitationsDeletePostRequest(BaseModel):
    accountIds: List[FieldString] = Field(
        ...,
        description='An array that lists Amazon Web Services account IDs, one for each account that sent an invitation to delete.',
    )


class SortCriteria6(BaseModel):
    attributeName: Optional[ListJobsSortAttributeName] = None
    orderBy: Optional[OrderBy] = None


class JobsJobIdPatchRequest(BaseModel):
    jobStatus: JobStatus = Field(
        ..., description='The status of a classification job. Possible values are:'
    )


class Status1(Enum):
    PAUSED = 'PAUSED'
    ENABLED = 'ENABLED'


class MaciePatchRequest(BaseModel):
    findingPublishingFrequency: Optional[FindingPublishingFrequency] = Field(
        None,
        description='The frequency with which Amazon Macie publishes updates to policy findings for an account. This includes publishing updates to Security Hub and Amazon EventBridge (formerly Amazon CloudWatch Events). For more information, see <a href="https://docs.aws.amazon.com/macie/latest/user/findings-monitor.html">Monitoring and processing findings</a> in the <i>Amazon Macie User Guide</i>. Valid values are:',
    )
    status: Optional[Status1] = Field(
        None, description='The status of an Amazon Macie account. Valid values are:'
    )


class MaciePostRequest(BaseModel):
    clientToken: Optional[str] = Field(
        None,
        description='A unique, case-sensitive token that you provide to ensure the idempotency of the request.',
    )
    findingPublishingFrequency: Optional[FindingPublishingFrequency] = Field(
        None,
        description='The frequency with which Amazon Macie publishes updates to policy findings for an account. This includes publishing updates to Security Hub and Amazon EventBridge (formerly Amazon CloudWatch Events). For more information, see <a href="https://docs.aws.amazon.com/macie/latest/user/findings-monitor.html">Monitoring and processing findings</a> in the <i>Amazon Macie User Guide</i>. Valid values are:',
    )
    status: Optional[Status1] = Field(
        None, description='The status of an Amazon Macie account. Valid values are:'
    )


class MacieMembersIdPatchRequest(BaseModel):
    status: Status1 = Field(
        ..., description='The status of an Amazon Macie account. Valid values are:'
    )


class ManagedDataIdentifiersListPostRequest(BaseModel):
    nextToken: Optional[str] = Field(
        None,
        description='The nextToken string that specifies which page of results to return in a paginated response.',
    )


class Account(BaseModel):
    accountId: Optional[FieldString] = None
    email: Optional[FieldString] = None


class MembersPostRequest(BaseModel):
    account: Account = Field(
        ...,
        description='Specifies the details of an account to associate with an Amazon Macie administrator account.',
    )
    tags: Optional[Dict[str, FieldString]] = Field(
        None,
        description='A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.',
    )


class ResourceProfilesResourceArnPatchRequest(BaseModel):
    sensitivityScoreOverride: Optional[int] = Field(
        None,
        description='The new sensitivity score for the bucket. Valid values are: 100, assign the maximum score and apply the <i>Sensitive</i> label to the bucket; and, null (empty), assign a score that Amazon Macie calculates automatically after you submit the request.',
    )


class Configuration1(BaseModel):
    kmsKeyId: Optional[FieldStringMin1Max2048] = None
    status: Optional[RevealStatus] = None


class RevealConfigurationPutRequest(BaseModel):
    configuration: Configuration1 = Field(
        ...,
        description='Specifies the configuration settings for retrieving occurrences of sensitive data reported by findings, and the status of the configuration for an Amazon Macie account. When you enable the configuration for the first time, your request must specify an Key Management Service (KMS) key. Otherwise, an error occurs. Macie uses the specified key to encrypt the sensitive data that you retrieve.',
    )


class TagsResourceArnPostRequest(BaseModel):
    tags: Dict[str, FieldString] = Field(
        ...,
        description='A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.',
    )


class TagKeys(RootModel[List[FieldString]]):
    root: List[FieldString]


class SortBy(BaseModel):
    key: Optional[UsageStatisticsSortKey] = None
    orderBy: Optional[OrderBy] = None


class AcceptInvitationRequest(BaseModel):
    administratorAccountId: Optional[FieldString] = None
    invitationId: FieldString
    masterAccount: Optional[FieldString] = None


class AccessControlList(BaseModel):
    allowsPublicReadAccess: Optional[FieldBoolean] = None
    allowsPublicWriteAccess: Optional[FieldBoolean] = None


class AccountDetail(BaseModel):
    accountId: FieldString
    email: FieldString


class AdminAccount(BaseModel):
    accountId: Optional[FieldString] = None
    status: Optional[AdminStatus] = None


class AllowListStatus(BaseModel):
    code: AllowListStatusCode
    description: Optional[FieldStringMin1Max1024PatternSS] = None


class AllowListSummary(BaseModel):
    arn: Optional[
        FieldStringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922
    ] = None
    createdAt: Optional[FieldTimestampIso8601] = None
    description: Optional[FieldStringMin1Max512PatternSS] = None
    id: Optional[FieldStringMin22Max22PatternAZ0922] = None
    name: Optional[FieldStringMin1Max128Pattern] = None
    updatedAt: Optional[FieldTimestampIso8601] = None


class ApiCallDetails(BaseModel):
    api: Optional[FieldString] = None
    apiServiceName: Optional[FieldString] = None
    firstSeen: Optional[FieldTimestampIso8601] = None
    lastSeen: Optional[FieldTimestampIso8601] = None


class AwsAccount(BaseModel):
    accountId: Optional[FieldString] = None
    principalId: Optional[FieldString] = None


class AwsService(BaseModel):
    invokedBy: Optional[FieldString] = None


class BatchGetCustomDataIdentifierSummary(BaseModel):
    arn: Optional[FieldString] = None
    createdAt: Optional[FieldTimestampIso8601] = None
    deleted: Optional[FieldBoolean] = None
    description: Optional[FieldString] = None
    id: Optional[FieldString] = None
    name: Optional[FieldString] = None


class BlockPublicAccess(BaseModel):
    blockPublicAcls: Optional[FieldBoolean] = None
    blockPublicPolicy: Optional[FieldBoolean] = None
    ignorePublicAcls: Optional[FieldBoolean] = None
    restrictPublicBuckets: Optional[FieldBoolean] = None


class BucketCountByEffectivePermission(BaseModel):
    publiclyAccessible: Optional[FieldLong] = None
    publiclyReadable: Optional[FieldLong] = None
    publiclyWritable: Optional[FieldLong] = None
    unknown: Optional[FieldLong] = None


class BucketCountByEncryptionType(BaseModel):
    kmsManaged: Optional[FieldLong] = None
    s3Managed: Optional[FieldLong] = None
    unencrypted: Optional[FieldLong] = None
    unknown: Optional[FieldLong] = None


class BucketCountBySharedAccessType(BaseModel):
    external: Optional[FieldLong] = None
    internal: Optional[FieldLong] = None
    notShared: Optional[FieldLong] = None
    unknown: Optional[FieldLong] = None


class BucketCountPolicyAllowsUnencryptedObjectUploads(BaseModel):
    allowsUnencryptedObjectUploads: Optional[FieldLong] = None
    deniesUnencryptedObjectUploads: Optional[FieldLong] = None
    unknown: Optional[FieldLong] = None


class BucketPolicy(BaseModel):
    allowsPublicReadAccess: Optional[FieldBoolean] = None
    allowsPublicWriteAccess: Optional[FieldBoolean] = None


class BucketServerSideEncryption(BaseModel):
    kmsMasterKeyId: Optional[FieldString] = None
    type: Optional[Type] = None


class BucketSortCriteria(BaseModel):
    attributeName: Optional[FieldString] = None
    orderBy: Optional[OrderBy] = None


class Cell(BaseModel):
    cellReference: Optional[FieldString] = None
    column: Optional[FieldLong] = None
    columnName: Optional[FieldString] = None
    row: Optional[FieldLong] = None


class Cells(RootModel[List[Cell]]):
    root: List[Cell] = Field(
        ...,
        description='Specifies the location of occurrences of sensitive data in a Microsoft Excel workbook, CSV file, or TSV file.',
    )


class ClassificationResultStatus(BaseModel):
    code: Optional[FieldString] = None
    reason: Optional[FieldString] = None


class CreateAllowListResponse(BaseModel):
    arn: Optional[
        FieldStringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922
    ] = None
    id: Optional[FieldStringMin22Max22PatternAZ0922] = None


class CreateClassificationJobResponse(BaseModel):
    jobArn: Optional[FieldString] = None
    jobId: Optional[FieldString] = None


class CreateCustomDataIdentifierResponse(BaseModel):
    customDataIdentifierId: Optional[FieldString] = None


class CreateFindingsFilterResponse(BaseModel):
    arn: Optional[FieldString] = None
    id: Optional[FieldString] = None


class CreateMemberResponse(BaseModel):
    arn: Optional[FieldString] = None


class CreateSampleFindingsRequest(BaseModel):
    findingTypes: Optional[FieldListOfFindingType] = None


class CustomDataIdentifierSummary(BaseModel):
    arn: Optional[FieldString] = None
    createdAt: Optional[FieldTimestampIso8601] = None
    description: Optional[FieldString] = None
    id: Optional[FieldString] = None
    name: Optional[FieldString] = None


class DescribeOrganizationConfigurationResponse(BaseModel):
    autoEnable: Optional[FieldBoolean] = None
    maxAccountLimitReached: Optional[FieldBoolean] = None


class DetectedDataDetails(BaseModel):
    value: FieldStringMin1Max128


class Detection(BaseModel):
    arn: Optional[FieldString] = None
    count: Optional[FieldLong] = None
    id: Optional[FieldString] = None
    name: Optional[FieldString] = None
    suppressed: Optional[FieldBoolean] = None
    type: Optional[DataIdentifierType] = None


class DomainDetails(BaseModel):
    domainName: Optional[FieldString] = None


class EnableMacieRequest(BaseModel):
    clientToken: Optional[FieldString] = None
    findingPublishingFrequency: Optional[FindingPublishingFrequency] = None
    status: Optional[MacieStatus] = None


class EnableOrganizationAdminAccountRequest(BaseModel):
    adminAccountId: FieldString
    clientToken: Optional[FieldString] = None


class FindingAction(BaseModel):
    actionType: Optional[FindingActionType] = None
    apiCallDetails: Optional[ApiCallDetails] = None


class FindingStatisticsSortCriteria(BaseModel):
    attributeName: Optional[FindingStatisticsSortAttributeName] = None
    orderBy: Optional[OrderBy] = None


class GetAutomatedDiscoveryConfigurationResponse(BaseModel):
    classificationScopeId: Optional[ClassificationScopeId] = None
    disabledAt: Optional[Timestamp] = None
    firstEnabledAt: Optional[Timestamp] = None
    lastUpdatedAt: Optional[Timestamp] = None
    sensitivityInspectionTemplateId: Optional[SensitivityInspectionTemplateId] = None
    status: Optional[AutomatedDiscoveryStatus] = None


class GetBucketStatisticsRequest(BaseModel):
    accountId: Optional[FieldString] = None


class GetInvitationsCountResponse(BaseModel):
    invitationsCount: Optional[FieldLong] = None


class GetMacieSessionResponse(BaseModel):
    createdAt: Optional[FieldTimestampIso8601] = None
    findingPublishingFrequency: Optional[FindingPublishingFrequency] = None
    serviceRole: Optional[FieldString] = None
    status: Optional[MacieStatus] = None
    updatedAt: Optional[FieldTimestampIso8601] = None


class GetSensitiveDataOccurrencesAvailabilityResponse(BaseModel):
    code: Optional[AvailabilityCode] = None
    reasons: Optional[FieldListOfUnavailabilityReasonCode] = None


class GroupCount(BaseModel):
    count: Optional[FieldLong] = None
    groupKey: Optional[FieldString] = None


class IamUser(BaseModel):
    accountId: Optional[FieldString] = None
    arn: Optional[FieldString] = None
    principalId: Optional[FieldString] = None
    userName: Optional[FieldString] = None


class Invitation(BaseModel):
    accountId: Optional[FieldString] = None
    invitationId: Optional[FieldString] = None
    invitedAt: Optional[FieldTimestampIso8601] = None
    relationshipStatus: Optional[RelationshipStatus] = None


class IpCity(BaseModel):
    name: Optional[FieldString] = None


class IpCountry(BaseModel):
    code: Optional[FieldString] = None
    name: Optional[FieldString] = None


class IpGeoLocation(BaseModel):
    lat: Optional[FieldDouble] = None
    lon: Optional[FieldDouble] = None


class IpOwner(BaseModel):
    asn: Optional[FieldString] = None
    asnOrg: Optional[FieldString] = None
    isp: Optional[FieldString] = None
    org: Optional[FieldString] = None


class JobDetails(BaseModel):
    isDefinedInJob: Optional[IsDefinedInJob] = None
    isMonitoredByJob: Optional[IsMonitoredByJob] = None
    lastJobId: Optional[FieldString] = None
    lastJobRunTime: Optional[FieldTimestampIso8601] = None


class KeyValuePair(BaseModel):
    key: Optional[FieldString] = None
    value: Optional[FieldString] = None


class KeyValuePairList(RootModel[List[KeyValuePair]]):
    root: List[KeyValuePair] = Field(
        ...,
        description='Provides information about the tags that are associated with an S3 bucket or object. Each tag consists of a required tag key and an associated tag value.',
    )


class LastRunErrorStatus(BaseModel):
    code: Optional[LastRunErrorStatusCode] = None


class ListClassificationScopesResponse(BaseModel):
    classificationScopes: Optional[FieldListOfClassificationScopeSummary] = None
    nextToken: Optional[NextToken] = None


class ListCustomDataIdentifiersRequest(BaseModel):
    maxResults: Optional[FieldInteger] = None
    nextToken: Optional[FieldString] = None


class ListJobsSortCriteria(BaseModel):
    attributeName: Optional[ListJobsSortAttributeName] = None
    orderBy: Optional[OrderBy] = None


class ListManagedDataIdentifiersRequest(BaseModel):
    nextToken: Optional[FieldString] = None


class ManagedDataIdentifierSummary(BaseModel):
    category: Optional[SensitiveDataItemCategory] = None
    id: Optional[FieldString] = None


class MonthlySchedule(BaseModel):
    dayOfMonth: Optional[FieldInteger] = None


class ObjectCountByEncryptionType(BaseModel):
    customerManaged: Optional[FieldLong] = None
    kmsManaged: Optional[FieldLong] = None
    s3Managed: Optional[FieldLong] = None
    unencrypted: Optional[FieldLong] = None
    unknown: Optional[FieldLong] = None


class ObjectLevelStatistics(BaseModel):
    fileType: Optional[FieldLong] = None
    storageClass: Optional[FieldLong] = None
    total: Optional[FieldLong] = None


class Range(BaseModel):
    end: Optional[FieldLong] = None
    start: Optional[FieldLong] = None
    startColumn: Optional[FieldLong] = None


class Ranges(RootModel[List[Range]]):
    root: List[Range] = Field(
        ...,
        description='Specifies the locations of occurrences of sensitive data in a non-binary text file.',
    )


class Record(BaseModel):
    jsonPath: Optional[FieldString] = None
    recordIndex: Optional[FieldLong] = None


class Records(RootModel[List[Record]]):
    root: List[Record] = Field(
        ...,
        description='Specifies the locations of occurrences of sensitive data in an Apache Avro object container or a structured data file.',
    )


class ResourceProfileArtifact(BaseModel):
    arn: FieldString
    classificationResultStatus: FieldString
    sensitive: Optional[FieldBoolean] = None


class ResourceStatistics(BaseModel):
    totalBytesClassified: Optional[FieldLong] = None
    totalDetections: Optional[FieldLong] = None
    totalDetectionsSuppressed: Optional[FieldLong] = None
    totalItemsClassified: Optional[FieldLong] = None
    totalItemsSensitive: Optional[FieldLong] = None
    totalItemsSkipped: Optional[FieldLong] = None
    totalItemsSkippedInvalidEncryption: Optional[FieldLong] = None
    totalItemsSkippedInvalidKms: Optional[FieldLong] = None
    totalItemsSkippedPermissionDenied: Optional[FieldLong] = None


class RevealConfiguration(BaseModel):
    kmsKeyId: Optional[FieldStringMin1Max2048] = None
    status: RevealStatus


class S3BucketOwner(BaseModel):
    displayName: Optional[FieldString] = None
    id: Optional[FieldString] = None


class S3ClassificationScopeExclusion(BaseModel):
    bucketNames: FieldListOfS3BucketName


class S3ClassificationScopeExclusionUpdate(BaseModel):
    bucketNames: FieldListOfS3BucketName
    operation: ClassificationScopeUpdateOperation


class S3ClassificationScopeUpdate(BaseModel):
    excludes: S3ClassificationScopeExclusionUpdate


class S3Destination(BaseModel):
    bucketName: FieldString
    keyPrefix: Optional[FieldString] = None
    kmsKeyArn: FieldString


class S3WordsList(BaseModel):
    bucketName: FieldStringMin3Max255PatternAZaZ093255
    objectKey: FieldStringMin1Max1024PatternSS


class SearchResourcesTagCriterionPair(BaseModel):
    key: Optional[FieldString] = None
    value: Optional[FieldString] = None


class SecurityHubConfiguration(BaseModel):
    publishClassificationFindings: FieldBoolean
    publishPolicyFindings: FieldBoolean


class SensitivityAggregations(BaseModel):
    classifiableSizeInBytes: Optional[FieldLong] = None
    publiclyAccessibleCount: Optional[FieldLong] = None
    totalCount: Optional[FieldLong] = None
    totalSizeInBytes: Optional[FieldLong] = None


class SensitivityInspectionTemplatesEntry(BaseModel):
    id: Optional[FieldString] = None
    name: Optional[FieldString] = None


class ServerSideEncryption(BaseModel):
    encryptionType: Optional[EncryptionType] = None
    kmsMasterKeyId: Optional[FieldString] = None


class ServiceLimit(BaseModel):
    isServiceLimited: Optional[FieldBoolean] = None
    unit: Optional[Unit] = None
    value: Optional[FieldLong] = None


class SessionContextAttributes(BaseModel):
    creationDate: Optional[FieldTimestampIso8601] = None
    mfaAuthenticated: Optional[FieldBoolean] = None


class SessionIssuer(BaseModel):
    accountId: Optional[FieldString] = None
    arn: Optional[FieldString] = None
    principalId: Optional[FieldString] = None
    type: Optional[FieldString] = None
    userName: Optional[FieldString] = None


class Severity(BaseModel):
    description: Optional[SeverityDescription] = None
    score: Optional[FieldLong] = None


class SeverityLevel(BaseModel):
    occurrencesThreshold: FieldLong
    severity: DataIdentifierSeverity


class SeverityLevelList(RootModel[List[SeverityLevel]]):
    root: List[SeverityLevel] = Field(
        ...,
        description="<p>The severity to assign to findings that the custom data identifier produces, based on the number of occurrences of text that matches the custom data identifier's detection criteria. You can specify as many as three SeverityLevel objects in this array, one for each severity: LOW, MEDIUM, or HIGH. If you specify more than one, the occurrences thresholds must be in ascending order by severity, moving from LOW to HIGH. For example, 1 for LOW, 50 for MEDIUM, and 100 for HIGH. If an S3 object contains fewer occurrences than the lowest specified threshold, Amazon Macie doesn't create a finding.</p> <p>If you don't specify any values for this array, Macie creates findings for S3 objects that contain at least one occurrence of text that matches the detection criteria, and Macie automatically assigns the MEDIUM severity to those findings.</p>",
    )


class SortCriteria(BaseModel):
    attributeName: Optional[FieldString] = None
    orderBy: Optional[OrderBy] = None


class Statistics(BaseModel):
    approximateNumberOfObjectsToProcess: Optional[FieldDouble] = None
    numberOfRuns: Optional[FieldDouble] = None


class SuppressDataIdentifier(BaseModel):
    id: Optional[FieldString] = None
    type: Optional[DataIdentifierType] = None


class TagCriterionPairForJob(BaseModel):
    key: Optional[FieldString] = None
    value: Optional[FieldString] = None


class TagMap(RootModel[Optional[Dict[str, FieldString]]]):
    root: Optional[Dict[str, FieldString]] = None


class TagResourceRequest(BaseModel):
    tags: TagMap


class TagValuePair(BaseModel):
    key: Optional[FieldString] = None
    value: Optional[FieldString] = None


class TestCustomDataIdentifierResponse(BaseModel):
    matchCount: Optional[FieldInteger] = None


class UnprocessedAccount(BaseModel):
    accountId: Optional[FieldString] = None
    errorCode: Optional[ErrorCode] = None
    errorMessage: Optional[FieldString] = None


class UpdateAllowListResponse(BaseModel):
    arn: Optional[
        FieldStringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922
    ] = None
    id: Optional[FieldStringMin22Max22PatternAZ0922] = None


class UpdateClassificationScopeRequest(BaseModel):
    s3: Optional[S3ClassificationScopeUpdate] = None


class UpdateFindingsFilterResponse(BaseModel):
    arn: Optional[FieldString] = None
    id: Optional[FieldString] = None


class UpdateOrganizationConfigurationRequest(BaseModel):
    autoEnable: FieldBoolean


class UpdateResourceProfileRequest(BaseModel):
    sensitivityScoreOverride: Optional[FieldInteger] = None


class UpdateRevealConfigurationRequest(BaseModel):
    configuration: RevealConfiguration


class UpdateRevealConfigurationResponse(BaseModel):
    configuration: Optional[RevealConfiguration] = None


class UsageByAccount(BaseModel):
    currency: Optional[Currency] = None
    estimatedCost: Optional[FieldString] = None
    serviceLimit: Optional[ServiceLimit] = None
    type: Optional[UsageType] = None


class UsageStatisticsSortBy(BaseModel):
    key: Optional[UsageStatisticsSortKey] = None
    orderBy: Optional[OrderBy] = None


class UsageTotal(BaseModel):
    currency: Optional[Currency] = None
    estimatedCost: Optional[FieldString] = None
    type: Optional[UsageType] = None


class UserIdentityRoot(BaseModel):
    accountId: Optional[FieldString] = None
    arn: Optional[FieldString] = None
    principalId: Optional[FieldString] = None


class UserPausedDetails(BaseModel):
    jobExpiresAt: Optional[FieldTimestampIso8601] = None
    jobImminentExpirationHealthEventArn: Optional[FieldString] = None
    jobPausedAt: Optional[FieldTimestampIso8601] = None


class FieldListOfAdminAccount(RootModel[List[AdminAccount]]):
    root: List[AdminAccount]


class FieldListOfAllowListSummary(RootModel[List[AllowListSummary]]):
    root: List[AllowListSummary]


class FieldListOfBatchGetCustomDataIdentifierSummary(
    RootModel[List[BatchGetCustomDataIdentifierSummary]]
):
    root: List[BatchGetCustomDataIdentifierSummary]


class FieldListOfCustomDataIdentifierSummary(
    RootModel[List[CustomDataIdentifierSummary]]
):
    root: List[CustomDataIdentifierSummary]


class FieldListOfDetectedDataDetails(RootModel[List[DetectedDataDetails]]):
    root: List[DetectedDataDetails]


class FieldListOfDetection(RootModel[List[Detection]]):
    root: List[Detection]


class FieldListOfGroupCount(RootModel[List[GroupCount]]):
    root: List[GroupCount]


class FieldListOfInvitation(RootModel[List[Invitation]]):
    root: List[Invitation]


class FieldListOfKeyValuePair(RootModel[List[KeyValuePair]]):
    root: List[KeyValuePair]


class FieldListOfManagedDataIdentifierSummary(
    RootModel[List[ManagedDataIdentifierSummary]]
):
    root: List[ManagedDataIdentifierSummary]


class FieldListOfResourceProfileArtifact(RootModel[List[ResourceProfileArtifact]]):
    root: List[ResourceProfileArtifact]


class FieldListOfSearchResourcesTagCriterionPair(
    RootModel[List[SearchResourcesTagCriterionPair]]
):
    root: List[SearchResourcesTagCriterionPair]


class FieldListOfSensitivityInspectionTemplatesEntry(
    RootModel[List[SensitivityInspectionTemplatesEntry]]
):
    root: List[SensitivityInspectionTemplatesEntry]


class FieldListOfSuppressDataIdentifier(RootModel[List[SuppressDataIdentifier]]):
    root: List[SuppressDataIdentifier]


class FieldListOfTagCriterionPairForJob(RootModel[List[TagCriterionPairForJob]]):
    root: List[TagCriterionPairForJob]


class FieldListOfTagValuePair(RootModel[List[TagValuePair]]):
    root: List[TagValuePair]


class FieldListOfUnprocessedAccount(RootModel[List[UnprocessedAccount]]):
    root: List[UnprocessedAccount]


class FieldListOfUsageByAccount(RootModel[List[UsageByAccount]]):
    root: List[UsageByAccount]


class FieldListOfUsageTotal(RootModel[List[UsageTotal]]):
    root: List[UsageTotal]


class FieldListOfString(RootModel[List[FieldString]]):
    root: List[FieldString]


class Criteria(BaseModel):
    regex: Optional[FieldStringMin1Max512PatternSS] = None
    s3WordsList: Optional[S3WordsList] = None


class AllowListsPostRequest(BaseModel):
    clientToken: str = Field(
        ...,
        description='A unique, case-sensitive token that you provide to ensure the idempotency of the request.',
    )
    criteria: Criteria = Field(
        ...,
        description="Specifies the criteria for an allow list. The criteria must specify a regular expression (regex) or an S3 object (s3WordsList). It can't specify both.",
    )
    description: Optional[
        constr(pattern=r'^[\s\S]+$', min_length=1, max_length=512)
    ] = Field(
        None,
        description='A custom description of the allow list. The description can contain as many as 512 characters.',
    )
    name: constr(pattern=r'^.+$', min_length=1, max_length=128) = Field(
        ...,
        description='A custom name for the allow list. The name can contain as many as 128 characters.',
    )
    tags: Optional[Dict[str, FieldString]] = Field(
        None,
        description='A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.',
    )


class AllowListsIdPutRequest(BaseModel):
    criteria: Criteria = Field(
        ...,
        description="Specifies the criteria for an allow list. The criteria must specify a regular expression (regex) or an S3 object (s3WordsList). It can't specify both.",
    )
    description: Optional[
        constr(pattern=r'^[\s\S]+$', min_length=1, max_length=512)
    ] = Field(
        None,
        description='A custom description of the allow list. The description can contain as many as 512 characters.',
    )
    name: constr(pattern=r'^.+$', min_length=1, max_length=128) = Field(
        ...,
        description='A custom name for the allow list. The name can contain as many as 128 characters.',
    )


class Configuration(BaseModel):
    s3Destination: Optional[S3Destination] = None


class ClassificationExportConfigurationPutRequest(BaseModel):
    configuration: Configuration = Field(
        ...,
        description='Specifies where to store data classification results, and the encryption settings to use when storing results in that location. The location must be an S3 bucket.',
    )


class S3(BaseModel):
    excludes: Optional[S3ClassificationScopeExclusionUpdate] = None


class ClassificationScopesIdPatchRequest(BaseModel):
    s3: Optional[S3] = Field(
        None,
        description='Specifies changes to the list of S3 buckets that are excluded from automated sensitive data discovery for an Amazon Macie account.',
    )


class CustomDataIdentifiersPostRequest(BaseModel):
    clientToken: Optional[str] = Field(
        None,
        description='A unique, case-sensitive token that you provide to ensure the idempotency of the request.',
    )
    description: Optional[str] = Field(
        None,
        description="<p>A custom description of the custom data identifier. The description can contain as many as 512 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a custom data identifier. Other users of your account might be able to see this description, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
    )
    ignoreWords: Optional[List[FieldString]] = Field(
        None,
        description='An array that lists specific character sequences (<i>ignore words</i>) to exclude from the results. If the text matched by the regular expression contains any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4-90 UTF-8 characters. Ignore words are case sensitive.',
    )
    keywords: Optional[List[FieldString]] = Field(
        None,
        description="An array that lists specific character sequences (<i>keywords</i>), one of which must precede and be within proximity (maximumMatchDistance) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 3-90 UTF-8 characters. Keywords aren't case sensitive.",
    )
    maximumMatchDistance: Optional[int] = Field(
        None,
        description='The maximum number of characters that can exist between the end of at least one complete character sequence specified by the keywords array and the end of the text that matches the regex pattern. If a complete keyword precedes all the text that matches the pattern and the keyword is within the specified distance, Amazon Macie includes the result. The distance can be 1-300 characters. The default value is 50.',
    )
    name: str = Field(
        ...,
        description="<p>A custom name for the custom data identifier. The name can contain as many as 128 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a custom data identifier. Other users of your account might be able to see this name, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
    )
    regex: str = Field(
        ...,
        description='The regular expression (<i>regex</i>) that defines the pattern to match. The expression can contain as many as 512 characters.',
    )
    severityLevels: Optional[List[SeverityLevel]] = Field(
        None,
        description="<p>The severity to assign to findings that the custom data identifier produces, based on the number of occurrences of text that matches the custom data identifier's detection criteria. You can specify as many as three SeverityLevel objects in this array, one for each severity: LOW, MEDIUM, or HIGH. If you specify more than one, the occurrences thresholds must be in ascending order by severity, moving from LOW to HIGH. For example, 1 for LOW, 50 for MEDIUM, and 100 for HIGH. If an S3 object contains fewer occurrences than the lowest specified threshold, Amazon Macie doesn't create a finding.</p> <p>If you don't specify any values for this array, Macie creates findings for S3 objects that contain at least one occurrence of text that matches the detection criteria, and Macie automatically assigns the MEDIUM severity to those findings.</p>",
    )
    tags: Optional[Dict[str, FieldString]] = Field(
        None,
        description='A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.',
    )


class ScheduleFrequency(BaseModel):
    dailySchedule: Optional[DailySchedule] = None
    monthlySchedule: Optional[MonthlySchedule] = None
    weeklySchedule: Optional[WeeklySchedule] = None


class ResourceProfilesDetectionsResourceArnPatchRequest(BaseModel):
    suppressDataIdentifiers: Optional[List[SuppressDataIdentifier]] = Field(
        None,
        description="An array of objects, one for each custom data identifier or managed data identifier that detected the type of sensitive data to start excluding or including in the bucket's score. To start including all sensitive data types in the score, don't specify any values for this array.",
    )


class Excludes(BaseModel):
    managedDataIdentifierIds: Optional[FieldListOfString] = None


class Includes(BaseModel):
    allowListIds: Optional[FieldListOfString] = None
    customDataIdentifierIds: Optional[FieldListOfString] = None
    managedDataIdentifierIds: Optional[FieldListOfString] = None


class TemplatesSensitivityInspectionsIdPutRequest(BaseModel):
    description: Optional[str] = Field(
        None,
        description='A custom description of the template. The description can contain as many as 200 characters.',
    )
    excludes: Optional[Excludes] = Field(
        None,
        description='Specifies managed data identifiers to exclude (not use) when performing automated sensitive data discovery for an Amazon Macie account. For information about the managed data identifiers that Amazon Macie currently provides, see <a href="https://docs.aws.amazon.com/macie/latest/user/managed-data-identifiers.html">Using managed data identifiers</a> in the <i>Amazon Macie User Guide</i>.',
    )
    includes: Optional[Includes] = Field(
        None,
        description='Specifies the allow lists, custom data identifiers, and managed data identifiers to include (use) when performing automated sensitive data discovery for an Amazon Macie account. The configuration must specify at least one custom data identifier or managed data identifier. For information about the managed data identifiers that Amazon Macie currently provides, see <a href="https://docs.aws.amazon.com/macie/latest/user/managed-data-identifiers.html">Using managed data identifiers</a> in the <i>Amazon Macie User Guide</i>.',
    )


class AccountLevelPermissions(BaseModel):
    blockPublicAccess: Optional[BlockPublicAccess] = None


class AllowListCriteria(BaseModel):
    regex: Optional[FieldStringMin1Max512PatternSS] = None
    s3WordsList: Optional[S3WordsList] = None


class BatchGetCustomDataIdentifiersRequest(BaseModel):
    ids: Optional[FieldListOfString] = None


class BatchGetCustomDataIdentifiersResponse(BaseModel):
    customDataIdentifiers: Optional[FieldListOfBatchGetCustomDataIdentifierSummary] = (
        None
    )
    notFoundIdentifierIds: Optional[FieldListOfString] = None


class BucketCriteriaAdditionalProperties(BaseModel):
    eq: Optional[FieldListOfString] = None
    gt: Optional[FieldLong] = None
    gte: Optional[FieldLong] = None
    lt: Optional[FieldLong] = None
    lte: Optional[FieldLong] = None
    neq: Optional[FieldListOfString] = None
    prefix: Optional[FieldString] = None


class BucketLevelPermissions(BaseModel):
    accessControlList: Optional[AccessControlList] = None
    blockPublicAccess: Optional[BlockPublicAccess] = None
    bucketPolicy: Optional[BucketPolicy] = None


class BucketPermissionConfiguration(BaseModel):
    accountLevelPermissions: Optional[AccountLevelPermissions] = None
    bucketLevelPermissions: Optional[BucketLevelPermissions] = None


class BucketPublicAccess(BaseModel):
    effectivePermission: Optional[EffectivePermission] = None
    permissionConfiguration: Optional[BucketPermissionConfiguration] = None


class BucketStatisticsBySensitivity(BaseModel):
    classificationError: Optional[SensitivityAggregations] = None
    notClassified: Optional[SensitivityAggregations] = None
    notSensitive: Optional[SensitivityAggregations] = None
    sensitive: Optional[SensitivityAggregations] = None


class ClassificationExportConfiguration(BaseModel):
    s3Destination: Optional[S3Destination] = None


class CreateAllowListRequest(BaseModel):
    clientToken: FieldString
    criteria: AllowListCriteria
    description: Optional[FieldStringMin1Max512PatternSS] = None
    name: FieldStringMin1Max128Pattern
    tags: Optional[TagMap] = None


class CreateCustomDataIdentifierRequest(BaseModel):
    clientToken: Optional[FieldString] = None
    description: Optional[FieldString] = None
    ignoreWords: Optional[FieldListOfString] = None
    keywords: Optional[FieldListOfString] = None
    maximumMatchDistance: Optional[FieldInteger] = None
    name: FieldString
    regex: FieldString
    severityLevels: Optional[SeverityLevelList] = None
    tags: Optional[TagMap] = None


class CreateInvitationsRequest(BaseModel):
    accountIds: FieldListOfString
    disableEmailNotification: Optional[FieldBoolean] = None
    message: Optional[FieldString] = None


class CreateInvitationsResponse(BaseModel):
    unprocessedAccounts: Optional[FieldListOfUnprocessedAccount] = None


class CreateMemberRequest(BaseModel):
    account: AccountDetail
    tags: Optional[TagMap] = None


class CriterionAdditionalProperties(BaseModel):
    eq: Optional[FieldListOfString] = None
    eqExactMatch: Optional[FieldListOfString] = None
    gt: Optional[FieldLong] = None
    gte: Optional[FieldLong] = None
    lt: Optional[FieldLong] = None
    lte: Optional[FieldLong] = None
    neq: Optional[FieldListOfString] = None


class DeclineInvitationsRequest(BaseModel):
    accountIds: FieldListOfString


class DeclineInvitationsResponse(BaseModel):
    unprocessedAccounts: Optional[FieldListOfUnprocessedAccount] = None


class DeleteInvitationsRequest(BaseModel):
    accountIds: FieldListOfString


class DeleteInvitationsResponse(BaseModel):
    unprocessedAccounts: Optional[FieldListOfUnprocessedAccount] = None


class FindingsFilterListItem(BaseModel):
    action: Optional[FindingsFilterAction] = None
    arn: Optional[FieldString] = None
    id: Optional[FieldString] = None
    name: Optional[FieldString] = None
    tags: Optional[TagMap] = None


class GetAdministratorAccountResponse(BaseModel):
    administrator: Optional[Invitation] = None


class GetAllowListResponse(BaseModel):
    arn: Optional[
        FieldStringMin71Max89PatternArnAwsAwsCnAwsUsGovMacie2AZ19920D12AllowListAZ0922
    ] = None
    createdAt: Optional[FieldTimestampIso8601] = None
    criteria: Optional[AllowListCriteria] = None
    description: Optional[FieldStringMin1Max512PatternSS] = None
    id: Optional[FieldStringMin22Max22PatternAZ0922] = None
    name: Optional[FieldStringMin1Max128Pattern] = None
    status: Optional[AllowListStatus] = None
    tags: Optional[TagMap] = None
    updatedAt: Optional[FieldTimestampIso8601] = None


class GetBucketStatisticsResponse(BaseModel):
    bucketCount: Optional[FieldLong] = None
    bucketCountByEffectivePermission: Optional[BucketCountByEffectivePermission] = None
    bucketCountByEncryptionType: Optional[BucketCountByEncryptionType] = None
    bucketCountByObjectEncryptionRequirement: Optional[
        BucketCountPolicyAllowsUnencryptedObjectUploads
    ] = None
    bucketCountBySharedAccessType: Optional[BucketCountBySharedAccessType] = None
    bucketStatisticsBySensitivity: Optional[BucketStatisticsBySensitivity] = None
    classifiableObjectCount: Optional[FieldLong] = None
    classifiableSizeInBytes: Optional[FieldLong] = None
    lastUpdated: Optional[FieldTimestampIso8601] = None
    objectCount: Optional[FieldLong] = None
    sizeInBytes: Optional[FieldLong] = None
    sizeInBytesCompressed: Optional[FieldLong] = None
    unclassifiableObjectCount: Optional[ObjectLevelStatistics] = None
    unclassifiableObjectSizeInBytes: Optional[ObjectLevelStatistics] = None


class GetClassificationExportConfigurationResponse(BaseModel):
    configuration: Optional[ClassificationExportConfiguration] = None


class GetCustomDataIdentifierResponse(BaseModel):
    arn: Optional[FieldString] = None
    createdAt: Optional[FieldTimestampIso8601] = None
    deleted: Optional[FieldBoolean] = None
    description: Optional[FieldString] = None
    id: Optional[FieldString] = None
    ignoreWords: Optional[FieldListOfString] = None
    keywords: Optional[FieldListOfString] = None
    maximumMatchDistance: Optional[FieldInteger] = None
    name: Optional[FieldString] = None
    regex: Optional[FieldString] = None
    severityLevels: Optional[SeverityLevelList] = None
    tags: Optional[TagMap] = None


class GetFindingStatisticsResponse(BaseModel):
    countsByGroup: Optional[FieldListOfGroupCount] = None


class GetFindingsPublicationConfigurationResponse(BaseModel):
    securityHubConfiguration: Optional[SecurityHubConfiguration] = None


class GetFindingsRequest(BaseModel):
    findingIds: FieldListOfString
    sortCriteria: Optional[SortCriteria] = None


class GetMasterAccountResponse(BaseModel):
    master: Optional[Invitation] = None


class GetMemberResponse(BaseModel):
    accountId: Optional[FieldString] = None
    administratorAccountId: Optional[FieldString] = None
    arn: Optional[FieldString] = None
    email: Optional[FieldString] = None
    invitedAt: Optional[FieldTimestampIso8601] = None
    masterAccountId: Optional[FieldString] = None
    relationshipStatus: Optional[RelationshipStatus] = None
    tags: Optional[TagMap] = None
    updatedAt: Optional[FieldTimestampIso8601] = None


class GetResourceProfileResponse(BaseModel):
    profileUpdatedAt: Optional[FieldTimestampIso8601] = None
    sensitivityScore: Optional[FieldInteger] = None
    sensitivityScoreOverridden: Optional[FieldBoolean] = None
    statistics: Optional[ResourceStatistics] = None


class GetRevealConfigurationResponse(BaseModel):
    configuration: Optional[RevealConfiguration] = None


class GetUsageTotalsResponse(BaseModel):
    timeRange: Optional[TimeRange] = None
    usageTotals: Optional[FieldListOfUsageTotal] = None


class IpAddressDetails(BaseModel):
    ipAddressV4: Optional[FieldString] = None
    ipCity: Optional[IpCity] = None
    ipCountry: Optional[IpCountry] = None
    ipGeoLocation: Optional[IpGeoLocation] = None
    ipOwner: Optional[IpOwner] = None


class JobScheduleFrequency(BaseModel):
    dailySchedule: Optional[DailySchedule] = None
    monthlySchedule: Optional[MonthlySchedule] = None
    weeklySchedule: Optional[WeeklySchedule] = None


class ListAllowListsResponse(BaseModel):
    allowLists: Optional[FieldListOfAllowListSummary] = None
    nextToken: Optional[FieldString] = None


class ListCustomDataIdentifiersResponse(BaseModel):
    items: Optional[FieldListOfCustomDataIdentifierSummary] = None
    nextToken: Optional[FieldString] = None


class ListFindingsResponse(BaseModel):
    findingIds: Optional[FieldListOfString] = None
    nextToken: Optional[FieldString] = None


class ListInvitationsResponse(BaseModel):
    invitations: Optional[FieldListOfInvitation] = None
    nextToken: Optional[FieldString] = None


class ListJobsFilterTerm(BaseModel):
    comparator: Optional[JobComparator] = None
    key: Optional[ListJobsFilterKey] = None
    values: Optional[FieldListOfString] = None


class ListManagedDataIdentifiersResponse(BaseModel):
    items: Optional[FieldListOfManagedDataIdentifierSummary] = None
    nextToken: Optional[FieldString] = None


class ListOrganizationAdminAccountsResponse(BaseModel):
    adminAccounts: Optional[FieldListOfAdminAccount] = None
    nextToken: Optional[FieldString] = None


class ListResourceProfileArtifactsResponse(BaseModel):
    artifacts: Optional[FieldListOfResourceProfileArtifact] = None
    nextToken: Optional[FieldString] = None


class ListResourceProfileDetectionsResponse(BaseModel):
    detections: Optional[FieldListOfDetection] = None
    nextToken: Optional[FieldString] = None


class ListSensitivityInspectionTemplatesResponse(BaseModel):
    nextToken: Optional[FieldString] = None
    sensitivityInspectionTemplates: Optional[
        FieldListOfSensitivityInspectionTemplatesEntry
    ] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagMap] = None


class MatchingBucket(BaseModel):
    accountId: Optional[FieldString] = None
    bucketName: Optional[FieldString] = None
    classifiableObjectCount: Optional[FieldLong] = None
    classifiableSizeInBytes: Optional[FieldLong] = None
    errorCode: Optional[BucketMetadataErrorCode] = None
    errorMessage: Optional[FieldString] = None
    jobDetails: Optional[JobDetails] = None
    lastAutomatedDiscoveryTime: Optional[FieldTimestampIso8601] = None
    objectCount: Optional[FieldLong] = None
    objectCountByEncryptionType: Optional[ObjectCountByEncryptionType] = None
    sensitivityScore: Optional[FieldInteger] = None
    sizeInBytes: Optional[FieldLong] = None
    sizeInBytesCompressed: Optional[FieldLong] = None
    unclassifiableObjectCount: Optional[ObjectLevelStatistics] = None
    unclassifiableObjectSizeInBytes: Optional[ObjectLevelStatistics] = None


class MatchingResource(BaseModel):
    matchingBucket: Optional[MatchingBucket] = None


class Member(BaseModel):
    accountId: Optional[FieldString] = None
    administratorAccountId: Optional[FieldString] = None
    arn: Optional[FieldString] = None
    email: Optional[FieldString] = None
    invitedAt: Optional[FieldTimestampIso8601] = None
    masterAccountId: Optional[FieldString] = None
    relationshipStatus: Optional[RelationshipStatus] = None
    tags: Optional[TagMap] = None
    updatedAt: Optional[FieldTimestampIso8601] = None


class Page(BaseModel):
    lineRange: Optional[Range] = None
    offsetRange: Optional[Range] = None
    pageNumber: Optional[FieldLong] = None


class Pages(RootModel[List[Page]]):
    root: List[Page] = Field(
        ...,
        description='Specifies the location of occurrences of sensitive data in an Adobe Portable Document Format file.',
    )


class PutClassificationExportConfigurationRequest(BaseModel):
    configuration: ClassificationExportConfiguration


class PutClassificationExportConfigurationResponse(BaseModel):
    configuration: Optional[ClassificationExportConfiguration] = None


class PutFindingsPublicationConfigurationRequest(BaseModel):
    clientToken: Optional[FieldString] = None
    securityHubConfiguration: Optional[SecurityHubConfiguration] = None


class ReplicationDetails(BaseModel):
    replicated: Optional[FieldBoolean] = None
    replicatedExternally: Optional[FieldBoolean] = None
    replicationAccounts: Optional[FieldListOfString] = None


class S3Bucket(BaseModel):
    allowsUnencryptedObjectUploads: Optional[AllowsUnencryptedObjectUploads] = None
    arn: Optional[FieldString] = None
    createdAt: Optional[FieldTimestampIso8601] = None
    defaultServerSideEncryption: Optional[ServerSideEncryption] = None
    name: Optional[FieldString] = None
    owner: Optional[S3BucketOwner] = None
    publicAccess: Optional[BucketPublicAccess] = None
    tags: Optional[KeyValuePairList] = None


class S3BucketDefinitionForJob(BaseModel):
    accountId: FieldString
    buckets: FieldListOfString


class S3ClassificationScope(BaseModel):
    excludes: S3ClassificationScopeExclusion


class S3Object(BaseModel):
    bucketArn: Optional[FieldString] = None
    eTag: Optional[FieldString] = None
    extension: Optional[FieldString] = None
    key: Optional[FieldString] = None
    lastModified: Optional[FieldTimestampIso8601] = None
    path: Optional[FieldString] = None
    publicAccess: Optional[FieldBoolean] = None
    serverSideEncryption: Optional[ServerSideEncryption] = None
    size: Optional[FieldLong] = None
    storageClass: Optional[StorageClass] = None
    tags: Optional[KeyValuePairList] = None
    versionId: Optional[FieldString] = None


class SearchResourcesSimpleCriterion(BaseModel):
    comparator: Optional[SearchResourcesComparator] = None
    key: Optional[SearchResourcesSimpleCriterionKey] = None
    values: Optional[FieldListOfString] = None


class SearchResourcesTagCriterion(BaseModel):
    comparator: Optional[SearchResourcesComparator] = None
    tagValues: Optional[FieldListOfSearchResourcesTagCriterionPair] = None


class SensitiveDataOccurrences(
    RootModel[Optional[Dict[str, FieldListOfDetectedDataDetails]]]
):
    root: Optional[Dict[str, FieldListOfDetectedDataDetails]] = None


class SensitivityInspectionTemplateExcludes(BaseModel):
    managedDataIdentifierIds: Optional[FieldListOfString] = None


class SensitivityInspectionTemplateIncludes(BaseModel):
    allowListIds: Optional[FieldListOfString] = None
    customDataIdentifierIds: Optional[FieldListOfString] = None
    managedDataIdentifierIds: Optional[FieldListOfString] = None


class SessionContext(BaseModel):
    attributes: Optional[SessionContextAttributes] = None
    sessionIssuer: Optional[SessionIssuer] = None


class SimpleCriterionForJob(BaseModel):
    comparator: Optional[JobComparator] = None
    key: Optional[SimpleCriterionKeyForJob] = None
    values: Optional[FieldListOfString] = None


class SimpleScopeTerm(BaseModel):
    comparator: Optional[JobComparator] = None
    key: Optional[ScopeFilterKey] = None
    values: Optional[FieldListOfString] = None


class TagCriterionForJob(BaseModel):
    comparator: Optional[JobComparator] = None
    tagValues: Optional[FieldListOfTagCriterionPairForJob] = None


class TagScopeTerm(BaseModel):
    comparator: Optional[JobComparator] = None
    key: Optional[FieldString] = None
    tagValues: Optional[FieldListOfTagValuePair] = None
    target: Optional[TagTarget] = None


class TestCustomDataIdentifierRequest(BaseModel):
    ignoreWords: Optional[FieldListOfString] = None
    keywords: Optional[FieldListOfString] = None
    maximumMatchDistance: Optional[FieldInteger] = None
    regex: FieldString
    sampleText: FieldString


class UpdateAllowListRequest(BaseModel):
    criteria: AllowListCriteria
    description: Optional[FieldStringMin1Max512PatternSS] = None
    name: FieldStringMin1Max128Pattern


class UpdateResourceProfileDetectionsRequest(BaseModel):
    suppressDataIdentifiers: Optional[FieldListOfSuppressDataIdentifier] = None


class UpdateSensitivityInspectionTemplateRequest(BaseModel):
    description: Optional[FieldString] = None
    excludes: Optional[SensitivityInspectionTemplateExcludes] = None
    includes: Optional[SensitivityInspectionTemplateIncludes] = None


class UsageRecord(BaseModel):
    accountId: Optional[FieldString] = None
    automatedDiscoveryFreeTrialStartDate: Optional[FieldTimestampIso8601] = None
    freeTrialStartDate: Optional[FieldTimestampIso8601] = None
    usage: Optional[FieldListOfUsageByAccount] = None


class UsageStatisticsFilter(BaseModel):
    comparator: Optional[UsageStatisticsFilterComparator] = None
    key: Optional[UsageStatisticsFilterKey] = None
    values: Optional[FieldListOfString] = None


class FieldListOfFindingsFilterListItem(RootModel[List[FindingsFilterListItem]]):
    root: List[FindingsFilterListItem]


class FieldListOfListJobsFilterTerm(RootModel[List[ListJobsFilterTerm]]):
    root: List[ListJobsFilterTerm]


class FieldListOfMatchingResource(RootModel[List[MatchingResource]]):
    root: List[MatchingResource]


class FieldListOfMember(RootModel[List[Member]]):
    root: List[Member]


class FieldListOfS3BucketDefinitionForJob(RootModel[List[S3BucketDefinitionForJob]]):
    root: List[S3BucketDefinitionForJob]


class FieldListOfUsageRecord(RootModel[List[UsageRecord]]):
    root: List[UsageRecord]


class FieldListOfUsageStatisticsFilter(RootModel[List[UsageStatisticsFilter]]):
    root: List[UsageStatisticsFilter]


class DatasourcesS3PostRequest(BaseModel):
    criteria: Optional[Dict[str, BucketCriteriaAdditionalProperties]] = Field(
        None,
        description='Specifies, as a map, one or more property-based conditions that filter the results of a query for information about S3 buckets.',
    )
    maxResults: Optional[int] = Field(
        None,
        description='The maximum number of items to include in each page of the response. The default value is 50.',
    )
    nextToken: Optional[str] = Field(
        None,
        description='The nextToken string that specifies which page of results to return in a paginated response.',
    )
    sortCriteria: Optional[SortCriteria1] = Field(
        None,
        description='Specifies criteria for sorting the results of a query for information about S3 buckets.',
    )


class FilterCriteria(BaseModel):
    excludes: Optional[FieldListOfListJobsFilterTerm] = None
    includes: Optional[FieldListOfListJobsFilterTerm] = None


class JobsListPostRequest(BaseModel):
    filterCriteria: Optional[FilterCriteria] = Field(
        None,
        description='Specifies criteria for filtering the results of a request for information about classification jobs.',
    )
    maxResults: Optional[int] = Field(
        None,
        description='The maximum number of items to include in each page of the response.',
    )
    nextToken: Optional[str] = Field(
        None,
        description='The nextToken string that specifies which page of results to return in a paginated response.',
    )
    sortCriteria: Optional[SortCriteria6] = Field(
        None,
        description='Specifies criteria for sorting the results of a request for information about classification jobs.',
    )


class UsageStatisticsPostRequest(BaseModel):
    filterBy: Optional[List[UsageStatisticsFilter]] = Field(
        None,
        description='An array of objects, one for each condition to use to filter the query results. If you specify more than one condition, Amazon Macie uses an AND operator to join the conditions.',
    )
    maxResults: Optional[int] = Field(
        None,
        description='The maximum number of items to include in each page of the response.',
    )
    nextToken: Optional[str] = Field(
        None,
        description='The nextToken string that specifies which page of results to return in a paginated response.',
    )
    sortBy: Optional[SortBy] = Field(
        None,
        description='Specifies criteria for sorting the results of a query for Amazon Macie account quotas and usage data.',
    )
    timeRange: Optional[TimeRange] = Field(
        None,
        description='An inclusive time period that Amazon Macie usage data applies to. Possible values are:',
    )


class AssumedRole(BaseModel):
    accessKeyId: Optional[FieldString] = None
    accountId: Optional[FieldString] = None
    arn: Optional[FieldString] = None
    principalId: Optional[FieldString] = None
    sessionContext: Optional[SessionContext] = None


class BucketCriteria(
    RootModel[Optional[Dict[str, BucketCriteriaAdditionalProperties]]]
):
    root: Optional[Dict[str, BucketCriteriaAdditionalProperties]] = None


class BucketMetadata(BaseModel):
    accountId: Optional[FieldString] = None
    allowsUnencryptedObjectUploads: Optional[AllowsUnencryptedObjectUploads] = None
    bucketArn: Optional[FieldString] = None
    bucketCreatedAt: Optional[FieldTimestampIso8601] = None
    bucketName: Optional[FieldString] = None
    classifiableObjectCount: Optional[FieldLong] = None
    classifiableSizeInBytes: Optional[FieldLong] = None
    errorCode: Optional[BucketMetadataErrorCode] = None
    errorMessage: Optional[FieldString] = None
    jobDetails: Optional[JobDetails] = None
    lastAutomatedDiscoveryTime: Optional[FieldTimestampIso8601] = None
    lastUpdated: Optional[FieldTimestampIso8601] = None
    objectCount: Optional[FieldLong] = None
    objectCountByEncryptionType: Optional[ObjectCountByEncryptionType] = None
    publicAccess: Optional[BucketPublicAccess] = None
    region: Optional[FieldString] = None
    replicationDetails: Optional[ReplicationDetails] = None
    sensitivityScore: Optional[FieldInteger] = None
    serverSideEncryption: Optional[BucketServerSideEncryption] = None
    sharedAccess: Optional[SharedAccess] = None
    sizeInBytes: Optional[FieldLong] = None
    sizeInBytesCompressed: Optional[FieldLong] = None
    tags: Optional[FieldListOfKeyValuePair] = None
    unclassifiableObjectCount: Optional[ObjectLevelStatistics] = None
    unclassifiableObjectSizeInBytes: Optional[ObjectLevelStatistics] = None
    versioning: Optional[FieldBoolean] = None


class CriteriaForJob(BaseModel):
    simpleCriterion: Optional[SimpleCriterionForJob] = None
    tagCriterion: Optional[TagCriterionForJob] = None


class Criterion(RootModel[Optional[Dict[str, CriterionAdditionalProperties]]]):
    root: Optional[Dict[str, CriterionAdditionalProperties]] = None


class DescribeBucketsRequest(BaseModel):
    criteria: Optional[BucketCriteria] = None
    maxResults: Optional[FieldInteger] = None
    nextToken: Optional[FieldString] = None
    sortCriteria: Optional[BucketSortCriteria] = None


class FederatedUser(BaseModel):
    accessKeyId: Optional[FieldString] = None
    accountId: Optional[FieldString] = None
    arn: Optional[FieldString] = None
    principalId: Optional[FieldString] = None
    sessionContext: Optional[SessionContext] = None


class FindingCriteria(BaseModel):
    criterion: Optional[Criterion] = None


class GetClassificationScopeResponse(BaseModel):
    id: Optional[ClassificationScopeId] = None
    name: Optional[ClassificationScopeName] = None
    s3: Optional[S3ClassificationScope] = None


class GetFindingStatisticsRequest(BaseModel):
    findingCriteria: Optional[FindingCriteria] = None
    groupBy: GroupBy
    size: Optional[FieldInteger] = None
    sortCriteria: Optional[FindingStatisticsSortCriteria] = None


class GetFindingsFilterResponse(BaseModel):
    action: Optional[FindingsFilterAction] = None
    arn: Optional[FieldString] = None
    description: Optional[FieldString] = None
    findingCriteria: Optional[FindingCriteria] = None
    id: Optional[FieldString] = None
    name: Optional[FieldString] = None
    position: Optional[FieldInteger] = None
    tags: Optional[TagMap] = None


class GetSensitiveDataOccurrencesResponse(BaseModel):
    error: Optional[FieldString] = None
    sensitiveDataOccurrences: Optional[SensitiveDataOccurrences] = None
    status: Optional[RevealRequestStatus] = None


class GetSensitivityInspectionTemplateResponse(BaseModel):
    description: Optional[FieldString] = None
    excludes: Optional[SensitivityInspectionTemplateExcludes] = None
    includes: Optional[SensitivityInspectionTemplateIncludes] = None
    name: Optional[FieldString] = None
    sensitivityInspectionTemplateId: Optional[SensitivityInspectionTemplateId] = None


class GetUsageStatisticsRequest(BaseModel):
    filterBy: Optional[FieldListOfUsageStatisticsFilter] = None
    maxResults: Optional[FieldInteger] = None
    nextToken: Optional[FieldString] = None
    sortBy: Optional[UsageStatisticsSortBy] = None
    timeRange: Optional[TimeRange] = None


class GetUsageStatisticsResponse(BaseModel):
    nextToken: Optional[FieldString] = None
    records: Optional[FieldListOfUsageRecord] = None
    timeRange: Optional[TimeRange] = None


class JobScopeTerm(BaseModel):
    simpleScopeTerm: Optional[SimpleScopeTerm] = None
    tagScopeTerm: Optional[TagScopeTerm] = None


class ListFindingsFiltersResponse(BaseModel):
    findingsFilterListItems: Optional[FieldListOfFindingsFilterListItem] = None
    nextToken: Optional[FieldString] = None


class ListFindingsRequest(BaseModel):
    findingCriteria: Optional[FindingCriteria] = None
    maxResults: Optional[FieldInteger] = None
    nextToken: Optional[FieldString] = None
    sortCriteria: Optional[SortCriteria] = None


class ListJobsFilterCriteria(BaseModel):
    excludes: Optional[FieldListOfListJobsFilterTerm] = None
    includes: Optional[FieldListOfListJobsFilterTerm] = None


class ListMembersResponse(BaseModel):
    members: Optional[FieldListOfMember] = None
    nextToken: Optional[FieldString] = None


class Occurrences(BaseModel):
    cells: Optional[Cells] = None
    lineRanges: Optional[Ranges] = None
    offsetRanges: Optional[Ranges] = None
    pages: Optional[Pages] = None
    records: Optional[Records] = None


class ResourcesAffected(BaseModel):
    s3Bucket: Optional[S3Bucket] = None
    s3Object: Optional[S3Object] = None


class SearchResourcesCriteria(BaseModel):
    simpleCriterion: Optional[SearchResourcesSimpleCriterion] = None
    tagCriterion: Optional[SearchResourcesTagCriterion] = None


class SearchResourcesResponse(BaseModel):
    matchingResources: Optional[FieldListOfMatchingResource] = None
    nextToken: Optional[FieldString] = None


class UpdateFindingsFilterRequest(BaseModel):
    action: Optional[FindingsFilterAction] = None
    clientToken: Optional[FieldString] = None
    description: Optional[FieldString] = None
    findingCriteria: Optional[FindingCriteria] = None
    name: Optional[FieldString] = None
    position: Optional[FieldInteger] = None


class UserIdentity(BaseModel):
    assumedRole: Optional[AssumedRole] = None
    awsAccount: Optional[AwsAccount] = None
    awsService: Optional[AwsService] = None
    federatedUser: Optional[FederatedUser] = None
    iamUser: Optional[IamUser] = None
    root: Optional[UserIdentityRoot] = None
    type: Optional[UserIdentityType] = None


class FieldListOfBucketMetadata(RootModel[List[BucketMetadata]]):
    root: List[BucketMetadata]


class FieldListOfCriteriaForJob(RootModel[List[CriteriaForJob]]):
    root: List[CriteriaForJob]


class FieldListOfJobScopeTerm(RootModel[List[JobScopeTerm]]):
    root: List[JobScopeTerm]


class FieldListOfSearchResourcesCriteria(RootModel[List[SearchResourcesCriteria]]):
    root: List[SearchResourcesCriteria]


class FindingsPostRequest(BaseModel):
    findingCriteria: Optional[FindingCriteria] = Field(
        None,
        description='Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.',
    )
    maxResults: Optional[int] = Field(
        None,
        description='The maximum number of items to include in each page of the response.',
    )
    nextToken: Optional[str] = Field(
        None,
        description='The nextToken string that specifies which page of results to return in a paginated response.',
    )
    sortCriteria: Optional[SortCriteria3] = Field(
        None,
        description='Specifies criteria for sorting the results of a request for findings.',
    )


class FindingsStatisticsPostRequest(BaseModel):
    findingCriteria: Optional[FindingCriteria] = Field(
        None,
        description='Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.',
    )
    groupBy: GroupBy = Field(
        ...,
        description='<p>The finding property to use to group the query results. Valid values are:</p> <ul><li><p>classificationDetails.jobId - The unique identifier for the classification job that produced the finding.</p></li> <li><p>resourcesAffected.s3Bucket.name - The name of the S3 bucket that the finding applies to.</p></li> <li><p>severity.description - The severity level of the finding, such as High or Medium.</p></li> <li><p>type - The type of finding, such as Policy:IAMUser/S3BucketPublic and SensitiveData:S3Object/Personal.</p></li></ul>',
    )
    size: Optional[int] = Field(
        None,
        description='The maximum number of items to include in each page of the response.',
    )
    sortCriteria: Optional[SortCriteria5] = Field(
        None,
        description='Specifies criteria for sorting the results of a query that retrieves aggregated statistical data about findings.',
    )


class FindingsfiltersPostRequest(BaseModel):
    action: Action = Field(
        ...,
        description='The action to perform on findings that match the filter criteria. To suppress (automatically archive) findings that match the criteria, set this value to ARCHIVE. Valid values are:',
    )
    clientToken: Optional[str] = Field(
        None,
        description='A unique, case-sensitive token that you provide to ensure the idempotency of the request.',
    )
    description: Optional[str] = Field(
        None,
        description="<p>A custom description of the filter. The description can contain as many as 512 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a filter. Other users of your account might be able to see this description, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
    )
    findingCriteria: FindingCriteria = Field(
        ...,
        description='Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.',
    )
    name: str = Field(
        ...,
        description="<p>A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a filter. Other users of your account might be able to see this name, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
    )
    position: Optional[int] = Field(
        None,
        description='The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.',
    )
    tags: Optional[Dict[str, FieldString]] = Field(
        None,
        description='A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.',
    )


class FindingsfiltersIdPatchRequest(BaseModel):
    action: Optional[Action] = Field(
        None,
        description='The action to perform on findings that match the filter criteria. To suppress (automatically archive) findings that match the criteria, set this value to ARCHIVE. Valid values are:',
    )
    clientToken: Optional[str] = Field(
        None,
        description='A unique, case-sensitive token that you provide to ensure the idempotency of the request.',
    )
    description: Optional[str] = Field(
        None,
        description="<p>A custom description of the filter. The description can contain as many as 512 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the description of a filter. Other users of your account might be able to see this description, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
    )
    findingCriteria: Optional[FindingCriteria] = Field(
        None,
        description='Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.',
    )
    name: Optional[str] = Field(
        None,
        description="<p>A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters.</p> <p>We strongly recommend that you avoid including any sensitive data in the name of a filter. Other users of your account might be able to see this name, depending on the actions that they're allowed to perform in Amazon Macie.</p>",
    )
    position: Optional[int] = Field(
        None,
        description='The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.',
    )


class CreateFindingsFilterRequest(BaseModel):
    action: FindingsFilterAction
    clientToken: Optional[FieldString] = None
    description: Optional[FieldString] = None
    findingCriteria: FindingCriteria
    name: FieldString
    position: Optional[FieldInteger] = None
    tags: Optional[TagMap] = None


class CriteriaBlockForJob(BaseModel):
    and_: Optional[FieldListOfCriteriaForJob] = Field(None, alias='and')


class CustomDetection(BaseModel):
    arn: Optional[FieldString] = None
    count: Optional[FieldLong] = None
    name: Optional[FieldString] = None
    occurrences: Optional[Occurrences] = None


class CustomDetections(RootModel[List[CustomDetection]]):
    root: List[CustomDetection] = Field(
        ...,
        description='Provides information about custom data identifiers that produced a sensitive data finding, and the number of occurrences of the data that each identifier detected.',
    )


class DefaultDetection(BaseModel):
    count: Optional[FieldLong] = None
    occurrences: Optional[Occurrences] = None
    type: Optional[FieldString] = None


class DefaultDetections(RootModel[List[DefaultDetection]]):
    root: List[DefaultDetection] = Field(
        ...,
        description='Provides information about sensitive data that was detected by managed data identifiers and produced a sensitive data finding, and the number of occurrences of each type of sensitive data that was detected.',
    )


class DescribeBucketsResponse(BaseModel):
    buckets: Optional[FieldListOfBucketMetadata] = None
    nextToken: Optional[FieldString] = None


class FindingActor(BaseModel):
    domainDetails: Optional[DomainDetails] = None
    ipAddressDetails: Optional[IpAddressDetails] = None
    userIdentity: Optional[UserIdentity] = None


class JobScopingBlock(BaseModel):
    and_: Optional[FieldListOfJobScopeTerm] = Field(None, alias='and')


class ListClassificationJobsRequest(BaseModel):
    filterCriteria: Optional[ListJobsFilterCriteria] = None
    maxResults: Optional[FieldInteger] = None
    nextToken: Optional[FieldString] = None
    sortCriteria: Optional[ListJobsSortCriteria] = None


class PolicyDetails(BaseModel):
    action: Optional[FindingAction] = None
    actor: Optional[FindingActor] = None


class S3BucketCriteriaForJob(BaseModel):
    excludes: Optional[CriteriaBlockForJob] = None
    includes: Optional[CriteriaBlockForJob] = None


class Scoping(BaseModel):
    excludes: Optional[JobScopingBlock] = None
    includes: Optional[JobScopingBlock] = None


class SearchResourcesCriteriaBlock(BaseModel):
    and_: Optional[FieldListOfSearchResourcesCriteria] = Field(None, alias='and')


class SensitiveDataItem(BaseModel):
    category: Optional[SensitiveDataItemCategory] = None
    detections: Optional[DefaultDetections] = None
    totalCount: Optional[FieldLong] = None


class BucketCriteria1(BaseModel):
    excludes: Optional[SearchResourcesCriteriaBlock] = None
    includes: Optional[SearchResourcesCriteriaBlock] = None


class DatasourcesSearchResourcesPostRequest(BaseModel):
    bucketCriteria: Optional[BucketCriteria1] = Field(
        None,
        description='Specifies property- and tag-based conditions that define filter criteria for including or excluding S3 buckets from the query results. Exclude conditions take precedence over include conditions.',
    )
    maxResults: Optional[int] = Field(
        None,
        description='The maximum number of items to include in each page of the response. The default value is 50.',
    )
    nextToken: Optional[str] = Field(
        None,
        description='The nextToken string that specifies which page of results to return in a paginated response.',
    )
    sortCriteria: Optional[SortCriteria2] = Field(
        None,
        description='Specifies criteria for sorting the results of a query for information about Amazon Web Services resources that Amazon Macie monitors and analyzes.',
    )


class S3JobDefinition(BaseModel):
    bucketCriteria: Optional[S3BucketCriteriaForJob] = None
    bucketDefinitions: Optional[FieldListOfS3BucketDefinitionForJob] = None
    scoping: Optional[Scoping] = None


class JobsPostRequest(BaseModel):
    allowListIds: Optional[List[FieldString]] = Field(
        None,
        description='An array of unique identifiers, one for each allow list for the job to use when it analyzes data.',
    )
    clientToken: str = Field(
        ...,
        description='A unique, case-sensitive token that you provide to ensure the idempotency of the request.',
    )
    customDataIdentifierIds: Optional[List[FieldString]] = Field(
        None,
        description="An array of unique identifiers, one for each custom data identifier for the job to use when it analyzes data. To use only managed data identifiers, don't specify a value for this property and specify a value other than NONE for the managedDataIdentifierSelector property.",
    )
    description: Optional[str] = Field(
        None,
        description='A custom description of the job. The description can contain as many as 200 characters.',
    )
    initialRun: Optional[bool] = Field(
        None,
        description="<p>For a recurring job, specifies whether to analyze all existing, eligible objects immediately after the job is created (true). To analyze only those objects that are created or changed after you create the job and before the job's first scheduled run, set this value to false.</p> <p>If you configure the job to run only once, don't specify a value for this property.</p>",
    )
    jobType: JobType = Field(
        ...,
        description='The schedule for running a classification job. Valid values are:',
    )
    managedDataIdentifierIds: Optional[List[FieldString]] = Field(
        None,
        description='<p>An array of unique identifiers, one for each managed data identifier for the job to include (use) or exclude (not use) when it analyzes data. Inclusion or exclusion depends on the managed data identifier selection type that you specify for the job (managedDataIdentifierSelector).</p> <p>To retrieve a list of valid values for this property, use the ListManagedDataIdentifiers operation.</p>',
    )
    managedDataIdentifierSelector: Optional[ManagedDataIdentifierSelector] = Field(
        None,
        description='The selection type that determines which managed data identifiers a classification job uses to analyze data. Valid values are:',
    )
    name: str = Field(
        ...,
        description='A custom name for the job. The name can contain as many as 500 characters.',
    )
    s3JobDefinition: S3JobDefinition = Field(
        ...,
        description="Specifies which S3 buckets contain the objects that a classification job analyzes, and the scope of that analysis. The bucket specification can be static (bucketDefinitions) or dynamic (bucketCriteria). If it's static, the job analyzes objects in the same predefined set of buckets each time the job runs. If it's dynamic, the job analyzes objects in any buckets that match the specified criteria each time the job starts to run.",
    )
    samplingPercentage: Optional[int] = Field(
        None,
        description='The sampling depth, as a percentage, for the job to apply when processing objects. This value determines the percentage of eligible objects that the job analyzes. If this value is less than 100, Amazon Macie selects the objects to analyze at random, up to the specified percentage, and analyzes all the data in those objects.',
    )
    scheduleFrequency: Optional[ScheduleFrequency] = Field(
        None,
        description='Specifies the recurrence pattern for running a classification job.',
    )
    tags: Optional[Dict[str, FieldString]] = Field(
        None,
        description='A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.',
    )


class CustomDataIdentifiers(BaseModel):
    detections: Optional[CustomDetections] = None
    totalCount: Optional[FieldLong] = None


class JobSummary(BaseModel):
    bucketCriteria: Optional[S3BucketCriteriaForJob] = None
    bucketDefinitions: Optional[FieldListOfS3BucketDefinitionForJob] = None
    createdAt: Optional[FieldTimestampIso8601] = None
    jobId: Optional[FieldString] = None
    jobStatus: Optional[JobStatus] = None
    jobType: Optional[JobType] = None
    lastRunErrorStatus: Optional[LastRunErrorStatus] = None
    name: Optional[FieldString] = None
    userPausedDetails: Optional[UserPausedDetails] = None


class SearchResourcesBucketCriteria(BaseModel):
    excludes: Optional[SearchResourcesCriteriaBlock] = None
    includes: Optional[SearchResourcesCriteriaBlock] = None


class SearchResourcesRequest(BaseModel):
    bucketCriteria: Optional[SearchResourcesBucketCriteria] = None
    maxResults: Optional[FieldInteger] = None
    nextToken: Optional[FieldString] = None
    sortCriteria: Optional[SearchResourcesSortCriteria] = None


class SensitiveData(RootModel[List[SensitiveDataItem]]):
    root: List[SensitiveDataItem] = Field(
        ...,
        description='Provides information about the category and number of occurrences of sensitive data that produced a finding.',
    )


class FieldListOfJobSummary(RootModel[List[JobSummary]]):
    root: List[JobSummary]


class ClassificationResult(BaseModel):
    additionalOccurrences: Optional[FieldBoolean] = None
    customDataIdentifiers: Optional[CustomDataIdentifiers] = None
    mimeType: Optional[FieldString] = None
    sensitiveData: Optional[SensitiveData] = None
    sizeClassified: Optional[FieldLong] = None
    status: Optional[ClassificationResultStatus] = None


class CreateClassificationJobRequest(BaseModel):
    allowListIds: Optional[FieldListOfString] = None
    clientToken: FieldString
    customDataIdentifierIds: Optional[FieldListOfString] = None
    description: Optional[FieldString] = None
    initialRun: Optional[FieldBoolean] = None
    jobType: JobType
    managedDataIdentifierIds: Optional[FieldListOfString] = None
    managedDataIdentifierSelector: Optional[ManagedDataIdentifierSelector] = None
    name: FieldString
    s3JobDefinition: S3JobDefinition
    samplingPercentage: Optional[FieldInteger] = None
    scheduleFrequency: Optional[JobScheduleFrequency] = None
    tags: Optional[TagMap] = None


class DescribeClassificationJobResponse(BaseModel):
    allowListIds: Optional[FieldListOfString] = None
    clientToken: Optional[FieldString] = None
    createdAt: Optional[FieldTimestampIso8601] = None
    customDataIdentifierIds: Optional[FieldListOfString] = None
    description: Optional[FieldString] = None
    initialRun: Optional[FieldBoolean] = None
    jobArn: Optional[FieldString] = None
    jobId: Optional[FieldString] = None
    jobStatus: Optional[JobStatus] = None
    jobType: Optional[JobType] = None
    lastRunErrorStatus: Optional[LastRunErrorStatus] = None
    lastRunTime: Optional[FieldTimestampIso8601] = None
    managedDataIdentifierIds: Optional[FieldListOfString] = None
    managedDataIdentifierSelector: Optional[ManagedDataIdentifierSelector] = None
    name: Optional[FieldString] = None
    s3JobDefinition: Optional[S3JobDefinition] = None
    samplingPercentage: Optional[FieldInteger] = None
    scheduleFrequency: Optional[JobScheduleFrequency] = None
    statistics: Optional[Statistics] = None
    tags: Optional[TagMap] = None
    userPausedDetails: Optional[UserPausedDetails] = None


class ListClassificationJobsResponse(BaseModel):
    items: Optional[FieldListOfJobSummary] = None
    nextToken: Optional[FieldString] = None


class ClassificationDetails(BaseModel):
    detailedResultsLocation: Optional[FieldString] = None
    jobArn: Optional[FieldString] = None
    jobId: Optional[FieldString] = None
    originType: Optional[OriginType] = None
    result: Optional[ClassificationResult] = None


class Finding(BaseModel):
    accountId: Optional[FieldString] = None
    archived: Optional[FieldBoolean] = None
    category: Optional[FindingCategory] = None
    classificationDetails: Optional[ClassificationDetails] = None
    count: Optional[FieldLong] = None
    createdAt: Optional[FieldTimestampIso8601] = None
    description: Optional[FieldString] = None
    id: Optional[FieldString] = None
    partition: Optional[FieldString] = None
    policyDetails: Optional[PolicyDetails] = None
    region: Optional[FieldString] = None
    resourcesAffected: Optional[ResourcesAffected] = None
    sample: Optional[FieldBoolean] = None
    schemaVersion: Optional[FieldString] = None
    severity: Optional[Severity] = None
    title: Optional[FieldString] = None
    type: Optional[FindingType] = None
    updatedAt: Optional[FieldTimestampIso8601] = None


class FieldListOfFinding(RootModel[List[Finding]]):
    root: List[Finding]


class GetFindingsResponse(BaseModel):
    findings: Optional[FieldListOfFinding] = None
